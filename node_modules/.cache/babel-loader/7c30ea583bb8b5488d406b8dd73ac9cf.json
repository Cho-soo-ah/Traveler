{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\traveler\\\\Traverler\\\\src\\\\index.js\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./format.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 3\n}, this), document.getElementById(\"root\"));\nreportWebVitals(); // ------------------------------------------------ //\n// const {\n//   WebGLRenderer,\n//   PerspectiveCamera,\n//   Scene,\n//   Mesh,\n//   MeshBasicMaterial,\n//   CylinderGeometry,\n//   AmbientLight,\n//   PointLight,\n//   DoubleSide,\n//   TextureLoader,\n//   OrbitControls,\n//   Color,\n//   PlaneBufferGeometry,\n//   OrthographicCamera,\n//   RepeatWrapping,\n// } = global.THREE;\n// class App {\n//   get size() {\n//     return {\n//       width: window.innerWidth,\n//       height: window.innerHeight,\n//     };\n//   }\n//   constructor() {\n//     const { height, width } = this.size;\n//     this.renderer = new WebGLRenderer({\n//       antialising: true,\n//       alpha: true,\n//       canvas: undefined,\n//     });\n//     this.renderer.setPixelRatio(window.devicePixelRatio);\n//     this.renderer.setSize(width, height);\n//     this.camera = new PerspectiveCamera(45, width / height, 1, 100);\n//     this.camera.position.z = 5;\n//     this.controls = new OrbitControls(this.camera);\n//     this.scene = new Scene();\n//     this.backgroundGeometry = new PlaneBufferGeometry(5, 5);\n//     this.backgroundMap = new TextureLoader().load(\n//       \"https://uploads.codesandbox.io/uploads/user/17b8b653-e409-43ab-bc76-4dc7db446c10/8nUk-rock-_disp.png\"\n//     );\n//     this.backgroundMap.wrapS = RepeatWrapping;\n//     this.backgroundMap.wrapT = RepeatWrapping;\n//     this.backgroundMap.repeat.set(4, 4);\n//     this.backgroundMaterial = new MeshBasicMaterial({\n//       color: 0x000000,\n//       map: this.backgroundMap,\n//       alphaTest: 0.2,\n//     });\n//     // this.plane = new Mesh(this.backgroundGeometry, this.backgroundMaterial);\n//     this.map = new TextureLoader().load(\"../blourbagels.png\");\n//     //this.map.wrapS = RepeatWrapping;\n//     //this.map.wrapT = RepeatWrapping;\n//     //this.map.repeat.y = 71 / 2048;\n//     // this.map.repeat.y = 71 / 2048;\n//     this.map.offset.y = 1 - this.map.repeat.y;\n//     //this.map.repeat.y = 71 / 2048;\n//     //this.map.offset.y = 0;\n//     //this.map.offset.y = 1\n//     this.geometry = new CylinderGeometry(1, 1, 1, 64, 1, true);\n//     this.material = new MeshBasicMaterial({\n//       map: this.map,\n//       side: DoubleSide,\n//       alphaTest: 0.7,\n//     });\n//     this.mesh = new Mesh(this.geometry, this.material);\n//     this.mesh.position.z = 1;\n//     this.mesh.rotation.x = 0.4;\n//     this.mesh.rotation.z = 0.2;\n//     this.mesh.rotation.y = -0.8;\n//     this.scene.add(this.plane);\n//     this.scene.add(this.mesh);\n//     global.document.getElementById(\"app\").appendChild(this.renderer.domElement);\n//     this.update = this.update.bind(this);\n//   }\n//   update() {\n//     //this.mesh.rotation.x += Math.sin(0.01);\n//     this.mesh.rotation.y -= Math.sin(0.01);\n//     this.backgroundMap.offset.y += Math.sin(0.01);\n//     //this.map.offset.y += 1 - Math.sin(0.01);;\n//     this.renderer.render(this.scene, this.camera);\n//     this.requestId = requestAnimationFrame(this.update);\n//   }\n// }\n// const app = new App();\n// app.update();","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/index.js"],"names":["React","ReactDOM","App","reportWebVitals","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAO,cAAP;AACA,OAAOC,GAAP,MAAgB,OAAhB;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AAEAF,QAAQ,CAACG,MAAT,eACE,QAAC,KAAD,CAAO,UAAP;AAAA,yBACE,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,QADF,EAIEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAJF;AAOAH,eAAe,G,CACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./format.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\nreportWebVitals();\r\n// ------------------------------------------------ //\r\n// const {\r\n//   WebGLRenderer,\r\n//   PerspectiveCamera,\r\n//   Scene,\r\n//   Mesh,\r\n//   MeshBasicMaterial,\r\n//   CylinderGeometry,\r\n//   AmbientLight,\r\n//   PointLight,\r\n//   DoubleSide,\r\n//   TextureLoader,\r\n//   OrbitControls,\r\n//   Color,\r\n//   PlaneBufferGeometry,\r\n//   OrthographicCamera,\r\n//   RepeatWrapping,\r\n// } = global.THREE;\r\n\r\n// class App {\r\n//   get size() {\r\n//     return {\r\n//       width: window.innerWidth,\r\n//       height: window.innerHeight,\r\n//     };\r\n//   }\r\n\r\n//   constructor() {\r\n//     const { height, width } = this.size;\r\n\r\n//     this.renderer = new WebGLRenderer({\r\n//       antialising: true,\r\n//       alpha: true,\r\n//       canvas: undefined,\r\n//     });\r\n//     this.renderer.setPixelRatio(window.devicePixelRatio);\r\n//     this.renderer.setSize(width, height);\r\n\r\n//     this.camera = new PerspectiveCamera(45, width / height, 1, 100);\r\n//     this.camera.position.z = 5;\r\n\r\n//     this.controls = new OrbitControls(this.camera);\r\n\r\n//     this.scene = new Scene();\r\n\r\n//     this.backgroundGeometry = new PlaneBufferGeometry(5, 5);\r\n//     this.backgroundMap = new TextureLoader().load(\r\n//       \"https://uploads.codesandbox.io/uploads/user/17b8b653-e409-43ab-bc76-4dc7db446c10/8nUk-rock-_disp.png\"\r\n//     );\r\n//     this.backgroundMap.wrapS = RepeatWrapping;\r\n//     this.backgroundMap.wrapT = RepeatWrapping;\r\n//     this.backgroundMap.repeat.set(4, 4);\r\n//     this.backgroundMaterial = new MeshBasicMaterial({\r\n//       color: 0x000000,\r\n//       map: this.backgroundMap,\r\n//       alphaTest: 0.2,\r\n//     });\r\n//     // this.plane = new Mesh(this.backgroundGeometry, this.backgroundMaterial);\r\n\r\n//     this.map = new TextureLoader().load(\"../blourbagels.png\");\r\n\r\n//     //this.map.wrapS = RepeatWrapping;\r\n//     //this.map.wrapT = RepeatWrapping;\r\n//     //this.map.repeat.y = 71 / 2048;\r\n//     // this.map.repeat.y = 71 / 2048;\r\n//     this.map.offset.y = 1 - this.map.repeat.y;\r\n//     //this.map.repeat.y = 71 / 2048;\r\n//     //this.map.offset.y = 0;\r\n//     //this.map.offset.y = 1\r\n\r\n//     this.geometry = new CylinderGeometry(1, 1, 1, 64, 1, true);\r\n//     this.material = new MeshBasicMaterial({\r\n//       map: this.map,\r\n//       side: DoubleSide,\r\n//       alphaTest: 0.7,\r\n//     });\r\n//     this.mesh = new Mesh(this.geometry, this.material);\r\n//     this.mesh.position.z = 1;\r\n//     this.mesh.rotation.x = 0.4;\r\n//     this.mesh.rotation.z = 0.2;\r\n//     this.mesh.rotation.y = -0.8;\r\n\r\n//     this.scene.add(this.plane);\r\n//     this.scene.add(this.mesh);\r\n\r\n//     global.document.getElementById(\"app\").appendChild(this.renderer.domElement);\r\n//     this.update = this.update.bind(this);\r\n//   }\r\n\r\n//   update() {\r\n//     //this.mesh.rotation.x += Math.sin(0.01);\r\n//     this.mesh.rotation.y -= Math.sin(0.01);\r\n//     this.backgroundMap.offset.y += Math.sin(0.01);\r\n//     //this.map.offset.y += 1 - Math.sin(0.01);;\r\n\r\n//     this.renderer.render(this.scene, this.camera);\r\n//     this.requestId = requestAnimationFrame(this.update);\r\n//   }\r\n// }\r\n\r\n// const app = new App();\r\n// app.update();\r\n"]},"metadata":{},"sourceType":"module"}