{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\graphQL\\\\yalco-inflearn-graphql-apollo\\\\4-1-react-before-apollo\\\\src\\\\components\\\\people.js\",\n    _s3 = $RefreshSig$();\n\nimport \"./components.css\";\nimport { useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nconst GET_PEOPLE = gql`\n  query GetPeople {\n    people {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n    }\n  }\n`;\nconst GET_PERSON = gql`\n  query GetPerson($id: ID!) {\n    person(id: $id) {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n      serve_years\n      role\n      team\n      from\n      tools {\n        __typename\n        ... on Software {\n          id\n        }\n        ... on Equipment {\n          id\n          count\n        }\n      }\n    }\n  }\n`;\nconst DELETE_PERSON = gql`\n  mutation DeletePerson($id: ID!) {\n    deletePerson(id: $id) {\n      id\n    }\n  }\n`;\nconst POST_PERSON = gql`\n  mutation PostPerson($input: PostPersonInput!) {\n    postPerson(input: $input) {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n      serve_years\n      role\n      team\n      from\n    }\n  }\n`;\nconst EDIT_PERSON = gql`\n  mutation EditTeam($id: ID!, $input: PostPersonInput!) {\n    editPerson(id: $id, input: $input) {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n      serve_years\n      role\n      team\n      from\n    }\n  }\n`;\nconst INCREASE_EQUIPMENT = gql`\n  mutation IncreaseEquipment($id: ID!) {\n    increaseEquipment(id: $id) {\n      count\n    }\n  }\n`;\nlet refetchPeople;\nlet refetchPerson;\n\nfunction People() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [contentId, setContentId] = useState(0);\n  const sexes = [\"male\", \"female\"];\n  const bloodTypes = [\"A\", \"B\", \"AB\", \"O\"];\n  const roles = [\"developer\", \"designer\", \"planner\"];\n  const [inputs, setInputs] = useState({\n    first_name: \"\",\n    last_name: \"\",\n    sex: sexes[0],\n    blood_type: bloodTypes[0],\n    serve_years: 0,\n    role: roles[0],\n    team: 0,\n    from: \"\"\n  });\n\n  function execPostPerson() {\n    postPerson({\n      variables: {\n        input: inputs\n      }\n    });\n  }\n\n  const [postPerson] = useMutation(POST_PERSON, {\n    onCompleted: postPersonCompleted\n  });\n\n  function postPersonCompleted(data) {\n    alert(`${data.postPerson.id} 항목이 생성되었습니다.`);\n    refetchPeople();\n    setContentId(0);\n  }\n\n  function execEditPerson() {\n    editPerson({\n      variables: {\n        id: contentId,\n        input: inputs\n      }\n    });\n  }\n\n  const [editPerson] = useMutation(EDIT_PERSON, {\n    onCompleted: editPersonCompleted\n  });\n\n  function editPersonCompleted(data) {\n    console.log(data.editPerson);\n    alert(`${data.editPerson.id} 항목이 수정되었습니다.`);\n    refetchPeople();\n  }\n\n  function execDeletePerson() {\n    if (window.confirm(\"이 항목을 삭제하시겠습니까?\")) {\n      deletePerson({\n        variables: {\n          id: contentId\n        }\n      });\n    }\n  }\n\n  const [deletePerson] = useMutation(DELETE_PERSON, {\n    onCompleted: deletePersonCompleted\n  });\n\n  function deletePersonCompleted(data) {\n    console.log(data.deletePerson);\n    alert(`${data.deletePerson.id} 항목이 삭제되었습니다.`);\n    refetchPeople();\n    setContentId(0);\n  }\n\n  const [increaseEquipment] = useMutation(INCREASE_EQUIPMENT, {\n    onCompleted: refetchPerson\n  });\n\n  function AsideItems() {\n    _s();\n\n    const {\n      loading,\n      error,\n      data,\n      refetch\n    } = useQuery(GET_PEOPLE);\n    refetchPeople = refetch;\n\n    function peopleFaces(sex, id) {\n      const bySex = {\n        male: [\"🧑🏿\", \"👨🏻\", \"👦🏼\", \"‍🧓🏽\", \"🧔🏾\"],\n        female: [\"👩🏻\", \"👧🏼\", \"👩🏽‍🦰\", \"👩🏾‍🦱\", \"👱🏿‍♀️\"]\n      };\n      return bySex[sex][id % bySex[sex].length];\n    }\n\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.people.map(({\n        id,\n        sex,\n        first_name,\n        last_name,\n        blood_type\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setContentId(id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"face\",\n            children: peopleFaces(sex, id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bloodType\",\n            children: blood_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"peopleName\",\n            children: [first_name, \" \", last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(AsideItems, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n    return [useQuery];\n  });\n\n  function MainContents() {\n    _s2();\n\n    const {\n      loading,\n      error,\n      data,\n      refetch\n    } = useQuery(GET_PERSON, {\n      variables: {\n        id: contentId\n      },\n      onCompleted: data => {\n        if (contentId === 0) {\n          setInputs({\n            first_name: \"\",\n            last_name: \"\",\n            sex: sexes[0],\n            blood_type: bloodTypes[0],\n            serve_years: 0,\n            role: roles[0],\n            team: 0,\n            from: \"\"\n          });\n        } else {\n          setInputs({\n            first_name: data.person.first_name,\n            last_name: data.person.last_name,\n            sex: data.person.sex,\n            blood_type: data.person.blood_type,\n            serve_years: data.person.serve_years,\n            role: data.person.role,\n            team: data.person.team,\n            from: data.person.from\n          });\n        }\n      }\n    });\n    refetchPerson = refetch;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 23\n    }, this);\n\n    function handleChange(e) {\n      const {\n        name,\n        value\n      } = e.target;\n      setInputs({ ...inputs,\n        [name]: [\"serve_years\", \"team\"].includes(name) ? Number(value) : value\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [contentId !== 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: contentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"first_name\",\n                value: inputs.first_name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"last_name\",\n                value: inputs.last_name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sex\",\n                value: inputs.sex,\n                onChange: e => {\n                  handleChange(e);\n                },\n                children: sexes.map(sex => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sex,\n                    children: sex\n                  }, sex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Blood Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"blood_type\",\n                value: inputs.blood_type,\n                onChange: e => {\n                  handleChange(e);\n                },\n                children: bloodTypes.map(bloodType => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: bloodType,\n                    children: bloodType\n                  }, bloodType, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Serve Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"serve_years\",\n                value: inputs.serve_years,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 314,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 326,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role\",\n                value: inputs.role,\n                onChange: e => {\n                  handleChange(e);\n                },\n                children: roles.map(role => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: role,\n                    children: role\n                  }, role, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 23\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 346,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"team\",\n                value: inputs.team,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 345,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"from\",\n                value: inputs.from,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), contentId > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data && data.person.tools.map(tool => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [tool.id, tool.__typename === \"Equipment\" && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"count\",\n                children: tool.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"increase\",\n                onClick: () => increaseEquipment({\n                  variables: {\n                    id: tool.id\n                  }\n                }),\n                children: \"\\uD83D\\uDD3A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 379,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 23\n            }, this)]\n          }, tool.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 19\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), contentId === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            execPostPerson();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 395,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            execEditPerson();\n          },\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 406,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            execDeletePerson();\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setContentId(0);\n          },\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 420,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(MainContents, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"people\",\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: AsideItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 435,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contents\",\n      children: MainContents()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 436,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 434,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(People, \"v7LVSGADQdI/D6OGp4eGJFEwH5A=\", false, function () {\n  return [useMutation, useMutation, useMutation, useMutation];\n});\n\n_c = People;\nexport default People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["C:/Users/boomers/조수아/graphQL/yalco-inflearn-graphql-apollo/4-1-react-before-apollo/src/components/people.js"],"names":["useState","useQuery","useMutation","gql","GET_PEOPLE","GET_PERSON","DELETE_PERSON","POST_PERSON","EDIT_PERSON","INCREASE_EQUIPMENT","refetchPeople","refetchPerson","People","contentId","setContentId","sexes","bloodTypes","roles","inputs","setInputs","first_name","last_name","sex","blood_type","serve_years","role","team","from","execPostPerson","postPerson","variables","input","onCompleted","postPersonCompleted","data","alert","id","execEditPerson","editPerson","editPersonCompleted","console","log","execDeletePerson","window","confirm","deletePerson","deletePersonCompleted","increaseEquipment","AsideItems","loading","error","refetch","peopleFaces","bySex","male","female","length","people","map","MainContents","person","handleChange","e","name","value","target","includes","Number","bloodType","tools","tool","__typename","count"],"mappings":"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","sourcesContent":["import \"./components.css\";\r\nimport { useState } from \"react\";\r\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\r\n\r\nconst GET_PEOPLE = gql`\r\n  query GetPeople {\r\n    people {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PERSON = gql`\r\n  query GetPerson($id: ID!) {\r\n    person(id: $id) {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n      serve_years\r\n      role\r\n      team\r\n      from\r\n      tools {\r\n        __typename\r\n        ... on Software {\r\n          id\r\n        }\r\n        ... on Equipment {\r\n          id\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_PERSON = gql`\r\n  mutation DeletePerson($id: ID!) {\r\n    deletePerson(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst POST_PERSON = gql`\r\n  mutation PostPerson($input: PostPersonInput!) {\r\n    postPerson(input: $input) {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n      serve_years\r\n      role\r\n      team\r\n      from\r\n    }\r\n  }\r\n`;\r\n\r\nconst EDIT_PERSON = gql`\r\n  mutation EditTeam($id: ID!, $input: PostPersonInput!) {\r\n    editPerson(id: $id, input: $input) {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n      serve_years\r\n      role\r\n      team\r\n      from\r\n    }\r\n  }\r\n`;\r\n\r\nconst INCREASE_EQUIPMENT = gql`\r\n  mutation IncreaseEquipment($id: ID!) {\r\n    increaseEquipment(id: $id) {\r\n      count\r\n    }\r\n  }\r\n`;\r\n\r\nlet refetchPeople;\r\nlet refetchPerson;\r\n\r\nfunction People() {\r\n  const [contentId, setContentId] = useState(0);\r\n\r\n  const sexes = [\"male\", \"female\"];\r\n  const bloodTypes = [\"A\", \"B\", \"AB\", \"O\"];\r\n  const roles = [\"developer\", \"designer\", \"planner\"];\r\n\r\n  const [inputs, setInputs] = useState({\r\n    first_name: \"\",\r\n    last_name: \"\",\r\n    sex: sexes[0],\r\n    blood_type: bloodTypes[0],\r\n    serve_years: 0,\r\n    role: roles[0],\r\n    team: 0,\r\n    from: \"\",\r\n  });\r\n\r\n  function execPostPerson() {\r\n    postPerson({\r\n      variables: { input: inputs },\r\n    });\r\n  }\r\n  const [postPerson] = useMutation(POST_PERSON, {\r\n    onCompleted: postPersonCompleted,\r\n  });\r\n  function postPersonCompleted(data) {\r\n    alert(`${data.postPerson.id} 항목이 생성되었습니다.`);\r\n    refetchPeople();\r\n    setContentId(0);\r\n  }\r\n\r\n  function execEditPerson() {\r\n    editPerson({\r\n      variables: {\r\n        id: contentId,\r\n        input: inputs,\r\n      },\r\n    });\r\n  }\r\n  const [editPerson] = useMutation(EDIT_PERSON, {\r\n    onCompleted: editPersonCompleted,\r\n  });\r\n  function editPersonCompleted(data) {\r\n    console.log(data.editPerson);\r\n    alert(`${data.editPerson.id} 항목이 수정되었습니다.`);\r\n    refetchPeople();\r\n  }\r\n\r\n  function execDeletePerson() {\r\n    if (window.confirm(\"이 항목을 삭제하시겠습니까?\")) {\r\n      deletePerson({ variables: { id: contentId } });\r\n    }\r\n  }\r\n  const [deletePerson] = useMutation(DELETE_PERSON, {\r\n    onCompleted: deletePersonCompleted,\r\n  });\r\n  function deletePersonCompleted(data) {\r\n    console.log(data.deletePerson);\r\n    alert(`${data.deletePerson.id} 항목이 삭제되었습니다.`);\r\n    refetchPeople();\r\n    setContentId(0);\r\n  }\r\n\r\n  const [increaseEquipment] = useMutation(INCREASE_EQUIPMENT, {\r\n    onCompleted: refetchPerson,\r\n  });\r\n\r\n  function AsideItems() {\r\n    const { loading, error, data, refetch } = useQuery(GET_PEOPLE);\r\n\r\n    refetchPeople = refetch;\r\n\r\n    function peopleFaces(sex, id) {\r\n      const bySex = {\r\n        male: [\"🧑🏿\", \"👨🏻\", \"👦🏼\", \"‍🧓🏽\", \"🧔🏾\"],\r\n        female: [\"👩🏻\", \"👧🏼\", \"👩🏽‍🦰\", \"👩🏾‍🦱\", \"👱🏿‍♀️\"],\r\n      };\r\n      return bySex[sex][id % bySex[sex].length];\r\n    }\r\n\r\n    if (loading) return <p className=\"loading\">Loading...</p>;\r\n    if (error) return <p className=\"error\">Error :(</p>;\r\n\r\n    return (\r\n      <ul>\r\n        {data.people.map(({ id, sex, first_name, last_name, blood_type }) => {\r\n          return (\r\n            <li\r\n              key={id}\r\n              onClick={() => {\r\n                setContentId(id);\r\n              }}\r\n            >\r\n              <span className=\"face\">{peopleFaces(sex, id)}</span>\r\n              <span className=\"bloodType\">{blood_type}</span>\r\n              <span className=\"peopleName\">\r\n                {first_name} {last_name}\r\n              </span>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  function MainContents() {\r\n    const { loading, error, data, refetch } = useQuery(GET_PERSON, {\r\n      variables: { id: contentId },\r\n      onCompleted: (data) => {\r\n        if (contentId === 0) {\r\n          setInputs({\r\n            first_name: \"\",\r\n            last_name: \"\",\r\n            sex: sexes[0],\r\n            blood_type: bloodTypes[0],\r\n            serve_years: 0,\r\n            role: roles[0],\r\n            team: 0,\r\n            from: \"\",\r\n          });\r\n        } else {\r\n          setInputs({\r\n            first_name: data.person.first_name,\r\n            last_name: data.person.last_name,\r\n            sex: data.person.sex,\r\n            blood_type: data.person.blood_type,\r\n            serve_years: data.person.serve_years,\r\n            role: data.person.role,\r\n            team: data.person.team,\r\n            from: data.person.from,\r\n          });\r\n        }\r\n      },\r\n    });\r\n\r\n    refetchPerson = refetch;\r\n\r\n    if (loading) return <p className=\"loading\">Loading...</p>;\r\n    if (error) return <p className=\"error\">Error :(</p>;\r\n\r\n    function handleChange(e) {\r\n      const { name, value } = e.target;\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: [\"serve_years\", \"team\"].includes(name) ? Number(value) : value,\r\n      });\r\n    }\r\n\r\n    return (\r\n      <div className=\"inputContainer\">\r\n        <table>\r\n          <tbody>\r\n            {contentId !== 0 && (\r\n              <tr>\r\n                <td>Id</td>\r\n                <td>{contentId}</td>\r\n              </tr>\r\n            )}\r\n            <tr>\r\n              <td>First Name</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"first_name\"\r\n                  value={inputs.first_name}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Last Name</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"last_name\"\r\n                  value={inputs.last_name}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Sex</td>\r\n              <td>\r\n                <select\r\n                  name=\"sex\"\r\n                  value={inputs.sex}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                >\r\n                  {sexes.map((sex) => {\r\n                    return (\r\n                      <option key={sex} value={sex}>\r\n                        {sex}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Blood Type</td>\r\n              <td>\r\n                <select\r\n                  name=\"blood_type\"\r\n                  value={inputs.blood_type}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                >\r\n                  {bloodTypes.map((bloodType) => {\r\n                    return (\r\n                      <option key={bloodType} value={bloodType}>\r\n                        {bloodType}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Serve Years</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"serve_years\"\r\n                  value={inputs.serve_years}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Role</td>\r\n              <td>\r\n                <select\r\n                  name=\"role\"\r\n                  value={inputs.role}\r\n                  onChange={(e) => {\r\n                    handleChange(e);\r\n                  }}\r\n                >\r\n                  {roles.map((role) => {\r\n                    return (\r\n                      <option key={role} value={role}>\r\n                        {role}\r\n                      </option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Team</td>\r\n              <td>\r\n                <input\r\n                  type=\"number\"\r\n                  name=\"team\"\r\n                  value={inputs.team}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>From</td>\r\n              <td>\r\n                <input\r\n                  type=\"text\"\r\n                  name=\"from\"\r\n                  value={inputs.from}\r\n                  onChange={handleChange}\r\n                />\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {contentId > 0 && (\r\n          <ul>\r\n            {data &&\r\n              data.person.tools.map((tool) => {\r\n                return (\r\n                  <li key={tool.id}>\r\n                    {tool.id}\r\n                    {tool.__typename === \"Equipment\" && (\r\n                      <span>\r\n                        <span className=\"count\">{tool.count}</span>\r\n                        <span\r\n                          className=\"increase\"\r\n                          onClick={() =>\r\n                            increaseEquipment({ variables: { id: tool.id } })\r\n                          }\r\n                        >\r\n                          🔺\r\n                        </span>\r\n                      </span>\r\n                    )}\r\n                  </li>\r\n                );\r\n              })}\r\n          </ul>\r\n        )}\r\n        {contentId === 0 ? (\r\n          <div className=\"buttons\">\r\n            <button\r\n              onClick={() => {\r\n                execPostPerson();\r\n              }}\r\n            >\r\n              Submit\r\n            </button>\r\n          </div>\r\n        ) : (\r\n          <div className=\"buttons\">\r\n            <button\r\n              onClick={() => {\r\n                execEditPerson();\r\n              }}\r\n            >\r\n              Modify\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                execDeletePerson();\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                setContentId(0);\r\n              }}\r\n            >\r\n              New\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"people\" className=\"component\">\r\n      <aside>{AsideItems()}</aside>\r\n      <section className=\"contents\">{MainContents()}</section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default People;\r\n"]},"metadata":{},"sourceType":"module"}