{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\traveler\\\\Traverler\\\\src\\\\components\\\\MapChart\\\\MapChart.js\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, Graticule, ZoomableGroup, Sphere } from \"react-simple-maps\";\nimport { PatternLines } from \"@vx/pattern\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst highlighted = [\"BRA\", \"VNM\", \"COL\", \"IDN\", \"ETH\", \"HND\", \"IND\", \"UGA\", \"MEX\", \"GTM\", \"PER\", \"NIC\", \"CHN\", \"CIV\", \"CRI\", \"KEN\", \"PNG\", \"TZA\", \"SLV\", \"ECU\", \"CMR\", \"LAO\", \"MDG\", \"GAB\", \"THA\", \"VEN\", \"DOM\", \"HTI\", \"COD\", \"RWA\", \"BDI\", \"PHL\", \"TGO\", \"GIN\", \"YEM\", \"CUB\", \"PAN\", \"BOL\", \"TLS\", \"CAF\", \"NGA\", \"GHA\", \"SLE\", \"AGO\", \"JAM\", \"PRY\", \"MWI\", \"TTO\", \"ZWE\", \"LBR\"];\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoEqualEarth\",\n    projectionConfig: {\n      scale: 800\n    },\n    children: [/*#__PURE__*/_jsxDEV(PatternLines, {\n      id: \"lines\",\n      height: 4,\n      width: 4,\n      stroke: \"#e5d5c0\",\n      strokeWidth: 0.5,\n      background: \"#026c80\",\n      orientation: [\"diagonal\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      stroke: \"#ecae7d\",\n      strokeWidth: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graticule, {\n      stroke: \"#ecae7d\",\n      strokeWidth: 0.3\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      stroke: \"#026c80\",\n      strokeWidth: 0.2,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const isHighlighted = highlighted.indexOf(geo.properties.ISO_A3) !== -1;\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: isHighlighted ? \"url('#lines')\" : \"#8db4ad\",\n          onClick: () => console.log(geo.properties.ISO_A3)\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/components/MapChart/MapChart.js"],"names":["React","ComposableMap","Geographies","Geography","Graticule","ZoomableGroup","Sphere","PatternLines","geoUrl","highlighted","MapChart","scale","geographies","map","geo","isHighlighted","indexOf","properties","ISO_A3","console","log","rsmKey"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  ZoomableGroup,\r\n  Sphere,\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\nconst highlighted = [\r\n  \"BRA\",\r\n  \"VNM\",\r\n  \"COL\",\r\n  \"IDN\",\r\n  \"ETH\",\r\n  \"HND\",\r\n  \"IND\",\r\n  \"UGA\",\r\n  \"MEX\",\r\n  \"GTM\",\r\n  \"PER\",\r\n  \"NIC\",\r\n  \"CHN\",\r\n  \"CIV\",\r\n  \"CRI\",\r\n  \"KEN\",\r\n  \"PNG\",\r\n  \"TZA\",\r\n  \"SLV\",\r\n  \"ECU\",\r\n  \"CMR\",\r\n  \"LAO\",\r\n  \"MDG\",\r\n  \"GAB\",\r\n  \"THA\",\r\n  \"VEN\",\r\n  \"DOM\",\r\n  \"HTI\",\r\n  \"COD\",\r\n  \"RWA\",\r\n  \"BDI\",\r\n  \"PHL\",\r\n  \"TGO\",\r\n  \"GIN\",\r\n  \"YEM\",\r\n  \"CUB\",\r\n  \"PAN\",\r\n  \"BOL\",\r\n  \"TLS\",\r\n  \"CAF\",\r\n  \"NGA\",\r\n  \"GHA\",\r\n  \"SLE\",\r\n  \"AGO\",\r\n  \"JAM\",\r\n  \"PRY\",\r\n  \"MWI\",\r\n  \"TTO\",\r\n  \"ZWE\",\r\n  \"LBR\",\r\n];\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap\r\n      projection=\"geoEqualEarth\"\r\n      projectionConfig={{\r\n        scale: 800,\r\n      }}\r\n    >\r\n      {/* <ZoomableGroup zoom={1.5}> */}\r\n      {/* 패턴 */}\r\n      <PatternLines\r\n        id=\"lines\"\r\n        height={4}\r\n        width={4}\r\n        stroke=\"#e5d5c0\"\r\n        strokeWidth={0.5}\r\n        background=\"#026c80\"\r\n        orientation={[\"diagonal\"]}\r\n      />\r\n      {/* 외곽선 */}\r\n      <Sphere stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n      {/* 위도경도 */}\r\n      <Graticule stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n      <Geographies geography={geoUrl} stroke=\"#026c80\" strokeWidth={0.2}>\r\n        {({ geographies }) =>\r\n          geographies.map((geo) => {\r\n            const isHighlighted =\r\n              highlighted.indexOf(geo.properties.ISO_A3) !== -1;\r\n            return (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                fill={isHighlighted ? \"url('#lines')\" : \"#8db4ad\"}\r\n                onClick={() => console.log(geo.properties.ISO_A3)}\r\n              />\r\n            );\r\n          })\r\n        }\r\n      </Geographies>\r\n      {/* </ZoomableGroup> */}\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}