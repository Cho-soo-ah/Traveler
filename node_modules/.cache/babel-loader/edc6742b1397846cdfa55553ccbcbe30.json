{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\graphQL\\\\yalco-inflearn-graphql-apollo\\\\4-1-react-before-apollo\\\\src\\\\components\\\\teams.js\",\n    _s2 = $RefreshSig$();\n\nimport \"./components.css\";\nimport { useState } from \"react\";\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\nconst GET_TEAMS = gql`\n  query GetTeams {\n    teams {\n      id\n      manager\n      members {\n        id\n        first_name\n        last_name\n        role\n      }\n    }\n  }\n`;\n\nfunction Teams() {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const [contentId, setContentId] = useState(0);\n  const [inputs, setInputs] = useState({\n    manager: \"\",\n    office: \"\",\n    extension_number: \"\",\n    mascot: \"\",\n    cleaning_duty: \"\",\n    project: \"\"\n  }); // ...\n\n  function AsideItems() {\n    _s();\n\n    const roleIcons = {\n      developer: \"üíª\",\n      designer: \"üé®\",\n      planner: \"üìù\"\n    };\n    const {\n      loading,\n      error,\n      data,\n      refetch\n    } = useQuery(GET_TEAMS);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.teams.map(({\n        id,\n        manager,\n        members\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"teamItemTitle\",\n            onClick: () => {\n              setContentId(id);\n            },\n            children: [\"Team \", id, \" : \", manager, \"'s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"teamMembers\",\n            children: members.map(({\n              id,\n              first_name,\n              last_name,\n              role\n            }) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                children: [roleIcons[role], \" \", first_name, \" \", last_name]\n              }, id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } // ...\n\n\n  _s(AsideItems, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n    return [useQuery];\n  });\n\n  function MainContents() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"teams\",\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: AsideItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contents\",\n      children: MainContents()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Teams, \"Y98v0VevxrLie1SV7hEAibOdBSU=\");\n\n_c = Teams;\nexport default Teams;\n\nvar _c;\n\n$RefreshReg$(_c, \"Teams\");","map":{"version":3,"sources":["C:/Users/boomers/Ï°∞ÏàòÏïÑ/graphQL/yalco-inflearn-graphql-apollo/4-1-react-before-apollo/src/components/teams.js"],"names":["useState","useQuery","useMutation","gql","GET_TEAMS","Teams","contentId","setContentId","inputs","setInputs","manager","office","extension_number","mascot","cleaning_duty","project","AsideItems","roleIcons","developer","designer","planner","loading","error","data","refetch","teams","map","id","members","first_name","last_name","role","MainContents"],"mappings":"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","sourcesContent":["import \"./components.css\";\r\nimport { useState } from \"react\";\r\nimport { useQuery, useMutation, gql } from \"@apollo/client\";\r\n\r\nconst GET_TEAMS = gql`\r\n  query GetTeams {\r\n    teams {\r\n      id\r\n      manager\r\n      members {\r\n        id\r\n        first_name\r\n        last_name\r\n        role\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Teams() {\r\n  const [contentId, setContentId] = useState(0);\r\n  const [inputs, setInputs] = useState({\r\n    manager: \"\",\r\n    office: \"\",\r\n    extension_number: \"\",\r\n    mascot: \"\",\r\n    cleaning_duty: \"\",\r\n    project: \"\",\r\n  });\r\n\r\n  // ...\r\n  function AsideItems() {\r\n    const roleIcons = {\r\n      developer: \"üíª\",\r\n      designer: \"üé®\",\r\n      planner: \"üìù\",\r\n    };\r\n\r\n    const { loading, error, data, refetch } = useQuery(GET_TEAMS);\r\n\r\n    if (loading) return <p className=\"loading\">Loading...</p>;\r\n    if (error) return <p className=\"error\">Error :(</p>;\r\n\r\n    return (\r\n      <ul>\r\n        {data.teams.map(({ id, manager, members }) => {\r\n          return (\r\n            <li key={id}>\r\n              <span\r\n                className=\"teamItemTitle\"\r\n                onClick={() => {\r\n                  setContentId(id);\r\n                }}\r\n              >\r\n                Team {id} : {manager}'s\r\n              </span>\r\n              <ul className=\"teamMembers\">\r\n                {members.map(({ id, first_name, last_name, role }) => {\r\n                  return (\r\n                    <li key={id}>\r\n                      {roleIcons[role]} {first_name} {last_name}\r\n                    </li>\r\n                  );\r\n                })}\r\n              </ul>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n  // ...\r\n\r\n  function MainContents() {\r\n    return <div></div>;\r\n  }\r\n\r\n  return (\r\n    <div id=\"teams\" className=\"component\">\r\n      <aside>{AsideItems()}</aside>\r\n      <section className=\"contents\">{MainContents()}</section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Teams;\r\n"]},"metadata":{},"sourceType":"module"}