{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\traveler\\\\Traverler\\\\src\\\\components\\\\MapChart\\\\MapChart.js\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, Graticule, Line, Sphere } from \"react-simple-maps\";\nimport { PatternLines } from \"@vx/pattern\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\"; // https://www.worldatlas.com/articles/top-coffee-producing-countries.html\n\nconst highlighted = [\"BRA\", \"VNM\", \"COL\", \"IDN\", \"ETH\", \"HND\", \"IND\", \"UGA\", \"MEX\", \"GTM\", \"PER\", \"NIC\", \"CHN\", \"CIV\", \"CRI\", \"KEN\", \"PNG\", \"TZA\", \"SLV\", \"ECU\", \"CMR\", \"LAO\", \"MDG\", \"GAB\", \"THA\", \"VEN\", \"DOM\", \"HTI\", \"COD\", \"RWA\", \"BDI\", \"PHL\", \"TGO\", \"GIN\", \"YEM\", \"CUB\", \"PAN\", \"BOL\", \"TLS\", \"CAF\", \"NGA\", \"GHA\", \"SLE\", \"AGO\", \"JAM\", \"PRY\", \"MWI\", \"TTO\", \"ZWE\", \"LBR\"];\n\nfunction generateCircle(deg) {\n  if (!deg) return [[-180, 0], [-90, 0], [0, 0], [90, 0], [180, 0]];\n  return new Array(361).fill(1).map((d, i) => {\n    return [-180 + i, deg];\n  });\n}\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoEqualEarth\",\n    children: [/*#__PURE__*/_jsxDEV(PatternLines, {\n      id: \"lines\",\n      height: 6,\n      width: 6,\n      stroke: \"#776865\",\n      strokeWidth: 1,\n      background: \"#F6F0E9\",\n      orientation: [\"diagonal\"]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n      stroke: \"#DDD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      stroke: \"#FFF\",\n      strokeWidth: 0.5,\n      children: ({\n        geographies\n      }) => geographies.map(geo => {\n        const isHighlighted = highlighted.indexOf(geo.properties.ISO_A3) !== -1;\n        return /*#__PURE__*/_jsxDEV(Geography, {\n          geography: geo,\n          fill: isHighlighted ? \"url('#lines')\" : \"#F6F0E9\",\n          onClick: () => console.log(geo.properties.ISO_A3)\n        }, geo.rsmKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      coordinates: generateCircle(0),\n      stroke: \"#F53\",\n      strokeWidth: 2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      coordinates: generateCircle(23),\n      stroke: \"#776865\",\n      strokeWidth: 1,\n      strokeDasharray: [5, 5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Line, {\n      coordinates: generateCircle(-24),\n      stroke: \"#776865\",\n      strokeWidth: 1,\n      strokeDasharray: [5, 5]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/components/MapChart/MapChart.js"],"names":["React","ComposableMap","Geographies","Geography","Graticule","Line","Sphere","PatternLines","geoUrl","highlighted","generateCircle","deg","Array","fill","map","d","i","MapChart","geographies","geo","isHighlighted","indexOf","properties","ISO_A3","console","log","rsmKey"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  Line,\r\n  Sphere,\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\n\r\n// https://www.worldatlas.com/articles/top-coffee-producing-countries.html\r\nconst highlighted = [\r\n  \"BRA\",\r\n  \"VNM\",\r\n  \"COL\",\r\n  \"IDN\",\r\n  \"ETH\",\r\n  \"HND\",\r\n  \"IND\",\r\n  \"UGA\",\r\n  \"MEX\",\r\n  \"GTM\",\r\n  \"PER\",\r\n  \"NIC\",\r\n  \"CHN\",\r\n  \"CIV\",\r\n  \"CRI\",\r\n  \"KEN\",\r\n  \"PNG\",\r\n  \"TZA\",\r\n  \"SLV\",\r\n  \"ECU\",\r\n  \"CMR\",\r\n  \"LAO\",\r\n  \"MDG\",\r\n  \"GAB\",\r\n  \"THA\",\r\n  \"VEN\",\r\n  \"DOM\",\r\n  \"HTI\",\r\n  \"COD\",\r\n  \"RWA\",\r\n  \"BDI\",\r\n  \"PHL\",\r\n  \"TGO\",\r\n  \"GIN\",\r\n  \"YEM\",\r\n  \"CUB\",\r\n  \"PAN\",\r\n  \"BOL\",\r\n  \"TLS\",\r\n  \"CAF\",\r\n  \"NGA\",\r\n  \"GHA\",\r\n  \"SLE\",\r\n  \"AGO\",\r\n  \"JAM\",\r\n  \"PRY\",\r\n  \"MWI\",\r\n  \"TTO\",\r\n  \"ZWE\",\r\n  \"LBR\",\r\n];\r\n\r\nfunction generateCircle(deg) {\r\n  if (!deg)\r\n    return [\r\n      [-180, 0],\r\n      [-90, 0],\r\n      [0, 0],\r\n      [90, 0],\r\n      [180, 0],\r\n    ];\r\n  return new Array(361).fill(1).map((d, i) => {\r\n    return [-180 + i, deg];\r\n  });\r\n}\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap projection=\"geoEqualEarth\">\r\n      <PatternLines\r\n        id=\"lines\"\r\n        height={6}\r\n        width={6}\r\n        stroke=\"#776865\"\r\n        strokeWidth={1}\r\n        background=\"#F6F0E9\"\r\n        orientation={[\"diagonal\"]}\r\n      />\r\n      <Sphere stroke=\"#DDD\" />\r\n      {/* <Graticule stroke=\"#DDD\" /> */}\r\n      <Geographies geography={geoUrl} stroke=\"#FFF\" strokeWidth={0.5}>\r\n        {({ geographies }) =>\r\n          geographies.map((geo) => {\r\n            const isHighlighted =\r\n              highlighted.indexOf(geo.properties.ISO_A3) !== -1;\r\n            return (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                geography={geo}\r\n                fill={isHighlighted ? \"url('#lines')\" : \"#F6F0E9\"}\r\n                onClick={() => console.log(geo.properties.ISO_A3)}\r\n              />\r\n            );\r\n          })\r\n        }\r\n      </Geographies>\r\n      <Line coordinates={generateCircle(0)} stroke=\"#F53\" strokeWidth={2} />\r\n      <Line\r\n        coordinates={generateCircle(23)}\r\n        stroke=\"#776865\"\r\n        strokeWidth={1}\r\n        strokeDasharray={[5, 5]}\r\n      />\r\n      <Line\r\n        coordinates={generateCircle(-24)}\r\n        stroke=\"#776865\"\r\n        strokeWidth={1}\r\n        strokeDasharray={[5, 5]}\r\n      />\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}