{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\graphQL\\\\yalco-inflearn-graphql-apollo\\\\4-1-react-before-apollo\\\\src\\\\components\\\\people.js\",\n    _s3 = $RefreshSig$();\n\nimport './components.css';\nimport { useState } from 'react';\nimport { useQuery, useMutation, gql } from '@apollo/client';\nconst GET_PEOPLE = gql`\n  query GetPeople {\n  people {\n    id\n    first_name\n    last_name\n    sex\n    blood_type\n    }\n  }\n`;\nconst GET_PERSON = gql`\n  query GetPerson($id: ID!) {\n    person(id: $id) {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n      serve_years\n      role\n      team\n      from\n      tools {\n        __typename\n        ... on Software {\n          id\n        }\n        ... on Equipment {\n          id\n          count\n        }\n      }\n    }\n  }\n`;\nconst DELETE_PERSON = gql`\n  mutation DeletePerson($id: ID!) {\n    deletePerson(id: $id) {\n      id\n    }\n  }\n`;\nconst POST_PERSON = gql`\n  mutation PostPerson($input: PostPersonInput!) {\n    postPerson(input: $input) {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n      serve_years\n      role\n      team\n      from\n    }\n  }\n`;\nconst EDIT_PERSON = gql`\n  mutation EditTeam($id: ID!, $input: PostPersonInput!) {\n    editPerson(id: $id, input: $input) {\n      id\n      first_name\n      last_name\n      sex\n      blood_type\n      serve_years\n      role\n      team\n      from\n    }\n  }\n`;\nconst INCREASE_EQUIPMENT = gql`\n  mutation IncreaseEquipment($id: ID!) {\n    increaseEquipment(id: $id) {\n      count\n    }\n  }\n`;\nlet refetchPeople;\nlet refetchPerson;\n\nfunction People() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [contentId, setContentId] = useState(0);\n  const sexes = ['male', 'female'];\n  const bloodTypes = ['A', 'B', 'AB', 'O'];\n  const roles = ['developer', 'designer', 'planner'];\n  const [inputs, setInputs] = useState({\n    first_name: '',\n    last_name: '',\n    sex: sexes[0],\n    blood_type: bloodTypes[0],\n    serve_years: 0,\n    role: roles[0],\n    team: 0,\n    from: ''\n  });\n\n  function execPostPerson() {\n    postPerson({\n      variables: {\n        input: inputs\n      }\n    });\n  }\n\n  const [postPerson] = useMutation(POST_PERSON, {\n    onCompleted: postPersonCompleted\n  });\n\n  function postPersonCompleted(data) {\n    console.log(data.postPerson);\n    alert(`${data.postPerson.id} 항목이 생성되었습니다.`);\n    refetchPeople();\n    setContentId(0);\n  }\n\n  function execEditPerson() {\n    editPerson({\n      variables: {\n        id: contentId,\n        input: inputs\n      }\n    });\n  }\n\n  const [editPerson] = useMutation(EDIT_PERSON, {\n    onCompleted: editPersonCompleted\n  });\n\n  function editPersonCompleted(data) {\n    console.log(data.editPerson);\n    alert(`${data.editPerson.id} 항목이 수정되었습니다.`);\n    refetchPeople();\n  }\n\n  function execDeletePerson() {\n    if (window.confirm('이 항목을 삭제하시겠습니까?')) {\n      deletePerson({\n        variables: {\n          id: contentId\n        }\n      });\n    }\n  }\n\n  const [deletePerson] = useMutation(DELETE_PERSON, {\n    onCompleted: deletePersonCompleted\n  });\n\n  function deletePersonCompleted(data) {\n    console.log(data.deletePerson);\n    alert(`${data.deletePerson.id} 항목이 삭제되었습니다.`);\n    refetchPeople();\n    setContentId(0);\n  }\n\n  const [increaseEquipment] = useMutation(INCREASE_EQUIPMENT, {\n    onCompleted: refetchPerson\n  });\n\n  function AsideItems() {\n    _s();\n\n    const {\n      loading,\n      error,\n      data,\n      refetch\n    } = useQuery(GET_PEOPLE);\n    refetchPeople = refetch;\n\n    function peopleFaces(sex, id) {\n      const bySex = {\n        male: ['🧑🏿', '👨🏻', '👦🏼', '‍🧓🏽', '🧔🏾'],\n        female: ['👩🏻', '👧🏼', '👩🏽‍🦰', '👩🏾‍🦱', '👱🏿‍♀️']\n      };\n      return bySex[sex][id % bySex[sex].length];\n    }\n\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.people.map(({\n        id,\n        sex,\n        first_name,\n        last_name,\n        blood_type\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          onClick: () => {\n            setContentId(id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"face\",\n            children: peopleFaces(sex, id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"bloodType\",\n            children: blood_type\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"peopleName\",\n            children: [first_name, \" \", last_name]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }, this)]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s(AsideItems, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n    return [useQuery];\n  });\n\n  function MainContents() {\n    _s2();\n\n    const {\n      loading,\n      error,\n      data,\n      refetch\n    } = useQuery(GET_PERSON, {\n      variables: {\n        id: contentId\n      },\n      onCompleted: data => {\n        if (contentId === 0) {\n          setInputs({\n            first_name: '',\n            last_name: '',\n            sex: sexes[0],\n            blood_type: bloodTypes[0],\n            serve_years: 0,\n            role: roles[0],\n            team: 0,\n            from: ''\n          });\n        } else {\n          setInputs({\n            first_name: data.person.first_name,\n            last_name: data.person.last_name,\n            sex: data.person.sex,\n            blood_type: data.person.blood_type,\n            serve_years: data.person.serve_years,\n            role: data.person.role,\n            team: data.person.team,\n            from: data.person.from\n          });\n        }\n      }\n    });\n    refetchPerson = refetch;\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 23\n    }, this);\n\n    function handleChange(e) {\n      const {\n        name,\n        value\n      } = e.target;\n      setInputs({ ...inputs,\n        [name]: ['serve_years', 'team'].includes(name) ? Number(value) : value\n      });\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [contentId !== 0 && /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Id\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: contentId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"first_name\",\n                value: inputs.first_name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"last_name\",\n                value: inputs.last_name,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Sex\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"sex\",\n                value: inputs.sex,\n                onChange: e => {\n                  handleChange(e);\n                },\n                children: sexes.map(sex => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: sex,\n                    children: sex\n                  }, sex, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 253,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Blood Type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"blood_type\",\n                value: inputs.blood_type,\n                onChange: e => {\n                  handleChange(e);\n                },\n                children: bloodTypes.map(bloodType => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: bloodType,\n                    children: bloodType\n                  }, bloodType, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Serve Years\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"serve_years\",\n                value: inputs.serve_years,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"select\", {\n                name: \"role\",\n                value: inputs.role,\n                onChange: e => {\n                  handleChange(e);\n                },\n                children: roles.map(role => {\n                  return /*#__PURE__*/_jsxDEV(\"option\", {\n                    value: role,\n                    children: role\n                  }, role, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 278,\n                    columnNumber: 29\n                  }, this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Team\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 283,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"number\",\n                name: \"team\",\n                value: inputs.team,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"From\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                name: \"from\",\n                value: inputs.from,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this), contentId > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: data.person.tools.map(tool => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [tool.id, tool.__typename === 'Equipment' && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"count\",\n                children: tool.count\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 23\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"increase\",\n                onClick: () => increaseEquipment({\n                  variables: {\n                    id: tool.id\n                  }\n                }),\n                children: \"\\uD83D\\uDD3A\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 23\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 21\n            }, this)]\n          }, tool.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 11\n      }, this), contentId === 0 ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            execPostPerson();\n          },\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"buttons\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            execEditPerson();\n          },\n          children: \"Modify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 318,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            execDeletePerson();\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setContentId(0);\n          },\n          children: \"New\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(MainContents, \"D1/SdZTYM540x1wj5x+NzEA5Uvk=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"people\",\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: AsideItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contents\",\n      children: MainContents()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(People, \"5ZaGHLwJ5AwbN3SMb1omrUcPV3g=\", false, function () {\n  return [useMutation, useMutation, useMutation, useMutation];\n});\n\n_c = People;\nexport default People;\n\nvar _c;\n\n$RefreshReg$(_c, \"People\");","map":{"version":3,"sources":["C:/Users/boomers/조수아/graphQL/yalco-inflearn-graphql-apollo/4-1-react-before-apollo/src/components/people.js"],"names":["useState","useQuery","useMutation","gql","GET_PEOPLE","GET_PERSON","DELETE_PERSON","POST_PERSON","EDIT_PERSON","INCREASE_EQUIPMENT","refetchPeople","refetchPerson","People","contentId","setContentId","sexes","bloodTypes","roles","inputs","setInputs","first_name","last_name","sex","blood_type","serve_years","role","team","from","execPostPerson","postPerson","variables","input","onCompleted","postPersonCompleted","data","console","log","alert","id","execEditPerson","editPerson","editPersonCompleted","execDeletePerson","window","confirm","deletePerson","deletePersonCompleted","increaseEquipment","AsideItems","loading","error","refetch","peopleFaces","bySex","male","female","length","people","map","MainContents","person","handleChange","e","name","value","target","includes","Number","bloodType","tools","tool","__typename","count"],"mappings":";;;;;AAAA,OAAO,kBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,QAAT,EAAmBC,WAAnB,EAAgCC,GAAhC,QAA2C,gBAA3C;AAEA,MAAMC,UAAU,GAAGD,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;AAYA,MAAME,UAAU,GAAGF,GAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;AA0BA,MAAMG,aAAa,GAAGH,GAAI;AAC1B;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMI,WAAW,GAAGJ,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMK,WAAW,GAAGL,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;AAgBA,MAAMM,kBAAkB,GAAGN,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA,CANA;AAQA,IAAIO,aAAJ;AACA,IAAIC,aAAJ;;AAEA,SAASC,MAAT,GAAkB;AAAA;;AAAA;AAAA;;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,CAAD,CAA1C;AAEA,QAAMe,KAAK,GAAG,CAAC,MAAD,EAAS,QAAT,CAAd;AACA,QAAMC,UAAU,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,IAAX,EAAiB,GAAjB,CAAnB;AACA,QAAMC,KAAK,GAAG,CAAC,WAAD,EAAc,UAAd,EAA0B,SAA1B,CAAd;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBnB,QAAQ,CAAC;AACnCoB,IAAAA,UAAU,EAAE,EADuB;AAEnCC,IAAAA,SAAS,EAAE,EAFwB;AAGnCC,IAAAA,GAAG,EAAEP,KAAK,CAAC,CAAD,CAHyB;AAInCQ,IAAAA,UAAU,EAAEP,UAAU,CAAC,CAAD,CAJa;AAKnCQ,IAAAA,WAAW,EAAE,CALsB;AAMnCC,IAAAA,IAAI,EAAER,KAAK,CAAC,CAAD,CANwB;AAOnCS,IAAAA,IAAI,EAAE,CAP6B;AAQnCC,IAAAA,IAAI,EAAE;AAR6B,GAAD,CAApC;;AAWA,WAASC,cAAT,GAA2B;AACzBC,IAAAA,UAAU,CAAC;AACTC,MAAAA,SAAS,EAAE;AAAEC,QAAAA,KAAK,EAAEb;AAAT;AADF,KAAD,CAAV;AAED;;AACD,QAAM,CAACW,UAAD,IAAe3B,WAAW,CAC9BK,WAD8B,EACjB;AAAEyB,IAAAA,WAAW,EAAEC;AAAf,GADiB,CAAhC;;AAEA,WAASA,mBAAT,CAA8BC,IAA9B,EAAoC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACL,UAAjB;AACAQ,IAAAA,KAAK,CAAE,GAAEH,IAAI,CAACL,UAAL,CAAgBS,EAAG,eAAvB,CAAL;AACA5B,IAAAA,aAAa;AACbI,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACD;;AAED,WAASyB,cAAT,GAA2B;AACzBC,IAAAA,UAAU,CAAC;AACTV,MAAAA,SAAS,EAAE;AACTQ,QAAAA,EAAE,EAAEzB,SADK;AAETkB,QAAAA,KAAK,EAAEb;AAFE;AADF,KAAD,CAAV;AAKD;;AACD,QAAM,CAACsB,UAAD,IAAetC,WAAW,CAC9BM,WAD8B,EACjB;AAAEwB,IAAAA,WAAW,EAAES;AAAf,GADiB,CAAhC;;AAEA,WAASA,mBAAT,CAA8BP,IAA9B,EAAoC;AAClCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACM,UAAjB;AACAH,IAAAA,KAAK,CAAE,GAAEH,IAAI,CAACM,UAAL,CAAgBF,EAAG,eAAvB,CAAL;AACA5B,IAAAA,aAAa;AACd;;AAED,WAASgC,gBAAT,GAA6B;AAC3B,QAAIC,MAAM,CAACC,OAAP,CAAe,iBAAf,CAAJ,EAAuC;AACrCC,MAAAA,YAAY,CAAC;AAACf,QAAAA,SAAS,EAAE;AAACQ,UAAAA,EAAE,EAAEzB;AAAL;AAAZ,OAAD,CAAZ;AACD;AACF;;AACD,QAAM,CAACgC,YAAD,IAAiB3C,WAAW,CAChCI,aADgC,EACjB;AAAE0B,IAAAA,WAAW,EAAEc;AAAf,GADiB,CAAlC;;AAEA,WAASA,qBAAT,CAAgCZ,IAAhC,EAAsC;AACpCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACW,YAAjB;AACAR,IAAAA,KAAK,CAAE,GAAEH,IAAI,CAACW,YAAL,CAAkBP,EAAG,eAAzB,CAAL;AACA5B,IAAAA,aAAa;AACbI,IAAAA,YAAY,CAAC,CAAD,CAAZ;AACD;;AAED,QAAM,CAACiC,iBAAD,IAAsB7C,WAAW,CACrCO,kBADqC,EACjB;AAAEuB,IAAAA,WAAW,EAAErB;AAAf,GADiB,CAAvC;;AAIA,WAASqC,UAAT,GAAuB;AAAA;;AACrB,UAAM;AAAEC,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBhB,MAAAA,IAAlB;AAAwBiB,MAAAA;AAAxB,QAAoClD,QAAQ,CAACG,UAAD,CAAlD;AAEAM,IAAAA,aAAa,GAAGyC,OAAhB;;AAEA,aAASC,WAAT,CAAqB9B,GAArB,EAA0BgB,EAA1B,EAA8B;AAC5B,YAAMe,KAAK,GAAG;AACZC,QAAAA,IAAI,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,OAAzB,EAAkC,MAAlC,CADM;AAEZC,QAAAA,MAAM,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,SAAjB,EAA4B,SAA5B,EAAuC,SAAvC;AAFI,OAAd;AAIA,aAAOF,KAAK,CAAC/B,GAAD,CAAL,CAAWgB,EAAE,GAAGe,KAAK,CAAC/B,GAAD,CAAL,CAAWkC,MAA3B,CAAP;AACD;;AAED,QAAIP,OAAJ,EAAa,oBAAO;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AAEX,wBACE;AAAA,gBACGhB,IAAI,CAACuB,MAAL,CAAYC,GAAZ,CACC,CAAC;AAACpB,QAAAA,EAAD;AAAKhB,QAAAA,GAAL;AAAUF,QAAAA,UAAV;AAAsBC,QAAAA,SAAtB;AAAiCE,QAAAA;AAAjC,OAAD,KAAkD;AAChD,4BACE;AAAa,UAAA,OAAO,EAAE,MAAM;AAACT,YAAAA,YAAY,CAACwB,EAAD,CAAZ;AAAiB,WAA9C;AAAA,kCACE;AAAM,YAAA,SAAS,EAAC,MAAhB;AAAA,sBAAwBc,WAAW,CAAC9B,GAAD,EAAMgB,EAAN;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AAAM,YAAA,SAAS,EAAC,WAAhB;AAAA,sBAA6Bf;AAA7B;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAM,YAAA,SAAS,EAAC,YAAhB;AAAA,uBAA8BH,UAA9B,OAA2CC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA,WAASiB,EAAT;AAAA;AAAA;AAAA;AAAA,gBADF;AAOH,OATA;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;;AA9Fe,KAgEPU,UAhEO;AAAA,YAiE4B/C,QAjE5B;AAAA;;AAgGhB,WAAS0D,YAAT,GAAyB;AAAA;;AAEvB,UAAM;AAAEV,MAAAA,OAAF;AAAWC,MAAAA,KAAX;AAAkBhB,MAAAA,IAAlB;AAAwBiB,MAAAA;AAAxB,QAAoClD,QAAQ,CAACI,UAAD,EAAa;AAC7DyB,MAAAA,SAAS,EAAE;AAACQ,QAAAA,EAAE,EAAEzB;AAAL,OADkD;AAE7DmB,MAAAA,WAAW,EAAGE,IAAD,IAAU;AACrB,YAAIrB,SAAS,KAAK,CAAlB,EAAqB;AACnBM,UAAAA,SAAS,CAAC;AACRC,YAAAA,UAAU,EAAE,EADJ;AAERC,YAAAA,SAAS,EAAE,EAFH;AAGRC,YAAAA,GAAG,EAAEP,KAAK,CAAC,CAAD,CAHF;AAIRQ,YAAAA,UAAU,EAAEP,UAAU,CAAC,CAAD,CAJd;AAKRQ,YAAAA,WAAW,EAAE,CALL;AAMRC,YAAAA,IAAI,EAAER,KAAK,CAAC,CAAD,CANH;AAORS,YAAAA,IAAI,EAAE,CAPE;AAQRC,YAAAA,IAAI,EAAE;AARE,WAAD,CAAT;AAUD,SAXD,MAWO;AACLR,UAAAA,SAAS,CAAC;AACRC,YAAAA,UAAU,EAAEc,IAAI,CAAC0B,MAAL,CAAYxC,UADhB;AAERC,YAAAA,SAAS,EAAEa,IAAI,CAAC0B,MAAL,CAAYvC,SAFf;AAGRC,YAAAA,GAAG,EAAEY,IAAI,CAAC0B,MAAL,CAAYtC,GAHT;AAIRC,YAAAA,UAAU,EAAEW,IAAI,CAAC0B,MAAL,CAAYrC,UAJhB;AAKRC,YAAAA,WAAW,EAAEU,IAAI,CAAC0B,MAAL,CAAYpC,WALjB;AAMRC,YAAAA,IAAI,EAAES,IAAI,CAAC0B,MAAL,CAAYnC,IANV;AAORC,YAAAA,IAAI,EAAEQ,IAAI,CAAC0B,MAAL,CAAYlC,IAPV;AAQRC,YAAAA,IAAI,EAAEO,IAAI,CAAC0B,MAAL,CAAYjC;AARV,WAAD,CAAT;AAUD;AACF;AA1B4D,KAAb,CAAlD;AA6BAhB,IAAAA,aAAa,GAAGwC,OAAhB;AAEA,QAAIF,OAAJ,EAAa,oBAAO;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACb,QAAIC,KAAJ,EAAW,oBAAO;AAAG,MAAA,SAAS,EAAC,OAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;;AAEX,aAASW,YAAT,CAAsBC,CAAtB,EAAyB;AACvB,YAAM;AAAEC,QAAAA,IAAF;AAAQC,QAAAA;AAAR,UAAkBF,CAAC,CAACG,MAA1B;AACA9C,MAAAA,SAAS,CAAC,EACR,GAAGD,MADK;AAER,SAAC6C,IAAD,GAAQ,CAAC,aAAD,EAAgB,MAAhB,EAAwBG,QAAxB,CAAiCH,IAAjC,IAAyCI,MAAM,CAACH,KAAD,CAA/C,GAAyDA;AAFzD,OAAD,CAAT;AAID;;AAED,wBACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,8BACE;AAAA,+BACE;AAAA,qBACGnD,SAAS,KAAK,CAAd,iBACD;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,wBAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAOE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCAAI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,YAAxB;AAAqC,gBAAA,KAAK,EAAEK,MAAM,CAACE,UAAnD;AAA+D,gBAAA,QAAQ,EAAEyC;AAAzE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF,eAWE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCAAI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,WAAxB;AAAoC,gBAAA,KAAK,EAAE3C,MAAM,CAACG,SAAlD;AAA6D,gBAAA,QAAQ,EAAEwC;AAAvE;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXF,eAeE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE;AAAQ,gBAAA,IAAI,EAAC,KAAb;AAAmB,gBAAA,KAAK,EAAE3C,MAAM,CAACI,GAAjC;AAAsC,gBAAA,QAAQ,EAAGwC,CAAD,IAAO;AAACD,kBAAAA,YAAY,CAACC,CAAD,CAAZ;AAAgB,iBAAxE;AAAA,0BACG/C,KAAK,CAAC2C,GAAN,CAAWpC,GAAD,IAAS;AAClB,sCAAQ;AAAkB,oBAAA,KAAK,EAAEA,GAAzB;AAAA,8BAA+BA;AAA/B,qBAAaA,GAAb;AAAA;AAAA;AAAA;AAAA,0BAAR;AAAsD,iBADvD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAfF,eAwBE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE;AAAQ,gBAAA,IAAI,EAAC,YAAb;AAA0B,gBAAA,KAAK,EAAEJ,MAAM,CAACK,UAAxC;AAAoD,gBAAA,QAAQ,EAAGuC,CAAD,IAAO;AAACD,kBAAAA,YAAY,CAACC,CAAD,CAAZ;AAAgB,iBAAtF;AAAA,0BACG9C,UAAU,CAAC0C,GAAX,CAAgBU,SAAD,IAAe;AAC7B,sCAAQ;AAAwB,oBAAA,KAAK,EAAEA,SAA/B;AAAA,8BAA2CA;AAA3C,qBAAaA,SAAb;AAAA;AAAA;AAAA;AAAA,0BAAR;AAAwE,iBADzE;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAxBF,eAiCE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCAAI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,IAAI,EAAC,aAA1B;AAAwC,gBAAA,KAAK,EAAElD,MAAM,CAACM,WAAtD;AAAmE,gBAAA,QAAQ,EAAEqC;AAA7E;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjCF,eAqCE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCACE;AAAQ,gBAAA,IAAI,EAAC,MAAb;AAAoB,gBAAA,KAAK,EAAE3C,MAAM,CAACO,IAAlC;AAAwC,gBAAA,QAAQ,EAAGqC,CAAD,IAAO;AAACD,kBAAAA,YAAY,CAACC,CAAD,CAAZ;AAAgB,iBAA1E;AAAA,0BACG7C,KAAK,CAACyC,GAAN,CAAWjC,IAAD,IAAU;AACnB,sCAAQ;AAAmB,oBAAA,KAAK,EAAEA,IAA1B;AAAA,8BAAiCA;AAAjC,qBAAaA,IAAb;AAAA;AAAA;AAAA;AAAA,0BAAR;AAAyD,iBAD1D;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBArCF,eA8CE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCAAI;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,IAAI,EAAC,MAA1B;AAAiC,gBAAA,KAAK,EAAEP,MAAM,CAACQ,IAA/C;AAAqD,gBAAA,QAAQ,EAAEmC;AAA/D;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CF,eAkDE;AAAA,oCACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAA,qCAAI;AAAO,gBAAA,IAAI,EAAC,MAAZ;AAAmB,gBAAA,IAAI,EAAC,MAAxB;AAA+B,gBAAA,KAAK,EAAE3C,MAAM,CAACS,IAA7C;AAAmD,gBAAA,QAAQ,EAAEkC;AAA7D;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,EA0DGhD,SAAS,GAAG,CAAZ,iBACC;AAAA,kBACGqB,IAAI,CAAC0B,MAAL,CAAYS,KAAZ,CAAkBX,GAAlB,CAAuBY,IAAD,IAAU;AAC/B,8BACE;AAAA,uBACGA,IAAI,CAAChC,EADR,EAEGgC,IAAI,CAACC,UAAL,KAAoB,WAApB,iBACC;AAAA,sCACE;AAAM,gBAAA,SAAS,EAAC,OAAhB;AAAA,0BAAyBD,IAAI,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE;AAAM,gBAAA,SAAS,EAAC,UAAhB;AACA,gBAAA,OAAO,EAAE,MAAMzB,iBAAiB,CAAC;AAACjB,kBAAAA,SAAS,EAAE;AAACQ,oBAAAA,EAAE,EAAEgC,IAAI,CAAChC;AAAV;AAAZ,iBAAD,CADhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAAA,aAASgC,IAAI,CAAChC,EAAd;AAAA;AAAA;AAAA;AAAA,kBADF;AAcD,SAfA;AADH;AAAA;AAAA;AAAA;AAAA,cA3DJ,EA8EGzB,SAAS,KAAK,CAAd,gBACE;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,+BACC;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACe,YAAAA,cAAc;AAAG,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,cADF,gBAKC;AAAK,QAAA,SAAS,EAAC,SAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACW,YAAAA,cAAc;AAAG,WAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAQ,UAAA,OAAO,EAAE,MAAM;AAACG,YAAAA,gBAAgB;AAAG,WAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAQ,UAAA,OAAO,EAAE,MAAM;AAAC5B,YAAAA,YAAY,CAAC,CAAD,CAAZ;AAAgB,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,cAnFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA4FD;;AAxOe,MAgGP6C,YAhGO;AAAA,YAkG4B1D,QAlG5B;AAAA;;AA0OhB,sBACE;AAAK,IAAA,EAAE,EAAC,QAAR;AAAiB,IAAA,SAAS,EAAC,WAA3B;AAAA,4BACE;AAAA,gBACG+C,UAAU;AADb;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAS,MAAA,SAAS,EAAC,UAAnB;AAAA,gBACGW,YAAY;AADf;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;IApPQ/C,M;UAsBcV,W,EAgBAA,W,EAaEA,W,EASKA,W;;;KA5DrBU,M;AAsPT,eAAeA,MAAf","sourcesContent":["import './components.css';\r\nimport { useState } from 'react';\r\nimport { useQuery, useMutation, gql } from '@apollo/client';\r\n\r\nconst GET_PEOPLE = gql`\r\n  query GetPeople {\r\n  people {\r\n    id\r\n    first_name\r\n    last_name\r\n    sex\r\n    blood_type\r\n    }\r\n  }\r\n`;\r\n\r\nconst GET_PERSON = gql`\r\n  query GetPerson($id: ID!) {\r\n    person(id: $id) {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n      serve_years\r\n      role\r\n      team\r\n      from\r\n      tools {\r\n        __typename\r\n        ... on Software {\r\n          id\r\n        }\r\n        ... on Equipment {\r\n          id\r\n          count\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nconst DELETE_PERSON = gql`\r\n  mutation DeletePerson($id: ID!) {\r\n    deletePerson(id: $id) {\r\n      id\r\n    }\r\n  }\r\n`\r\nconst POST_PERSON = gql`\r\n  mutation PostPerson($input: PostPersonInput!) {\r\n    postPerson(input: $input) {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n      serve_years\r\n      role\r\n      team\r\n      from\r\n    }\r\n  }\r\n`\r\n\r\nconst EDIT_PERSON = gql`\r\n  mutation EditTeam($id: ID!, $input: PostPersonInput!) {\r\n    editPerson(id: $id, input: $input) {\r\n      id\r\n      first_name\r\n      last_name\r\n      sex\r\n      blood_type\r\n      serve_years\r\n      role\r\n      team\r\n      from\r\n    }\r\n  }\r\n`\r\n\r\nconst INCREASE_EQUIPMENT = gql`\r\n  mutation IncreaseEquipment($id: ID!) {\r\n    increaseEquipment(id: $id) {\r\n      count\r\n    }\r\n  }\r\n`\r\n\r\nlet refetchPeople\r\nlet refetchPerson\r\n\r\nfunction People() {\r\n  const [contentId, setContentId] = useState(0)\r\n  \r\n  const sexes = ['male', 'female']\r\n  const bloodTypes = ['A', 'B', 'AB', 'O']\r\n  const roles = ['developer', 'designer', 'planner']\r\n\r\n  const [inputs, setInputs] = useState({\r\n    first_name: '',\r\n    last_name: '',\r\n    sex: sexes[0],\r\n    blood_type: bloodTypes[0],\r\n    serve_years: 0,\r\n    role: roles[0],\r\n    team: 0,\r\n    from: ''\r\n  })\r\n\r\n  function execPostPerson () {\r\n    postPerson({\r\n      variables: { input: inputs }})\r\n  }\r\n  const [postPerson] = useMutation(\r\n    POST_PERSON, { onCompleted: postPersonCompleted })\r\n  function postPersonCompleted (data) {\r\n    console.log(data.postPerson)\r\n    alert(`${data.postPerson.id} 항목이 생성되었습니다.`)\r\n    refetchPeople()\r\n    setContentId(0)\r\n  }\r\n\r\n  function execEditPerson () {\r\n    editPerson({\r\n      variables: {\r\n        id: contentId,\r\n        input: inputs }\r\n      })\r\n  }\r\n  const [editPerson] = useMutation(\r\n    EDIT_PERSON, { onCompleted: editPersonCompleted }) \r\n  function editPersonCompleted (data) {\r\n    console.log(data.editPerson)\r\n    alert(`${data.editPerson.id} 항목이 수정되었습니다.`)\r\n    refetchPeople()\r\n  }\r\n\r\n  function execDeletePerson () {\r\n    if (window.confirm('이 항목을 삭제하시겠습니까?')) {\r\n      deletePerson({variables: {id: contentId}})\r\n    }\r\n  }\r\n  const [deletePerson] = useMutation(\r\n    DELETE_PERSON, { onCompleted: deletePersonCompleted }) \r\n  function deletePersonCompleted (data) {\r\n    console.log(data.deletePerson)\r\n    alert(`${data.deletePerson.id} 항목이 삭제되었습니다.`)\r\n    refetchPeople()\r\n    setContentId(0)\r\n  }\r\n\r\n  const [increaseEquipment] = useMutation(\r\n    INCREASE_EQUIPMENT, { onCompleted: refetchPerson }\r\n  )\r\n\r\n  function AsideItems () {\r\n    const { loading, error, data, refetch } = useQuery(GET_PEOPLE);\r\n\r\n    refetchPeople = refetch\r\n\r\n    function peopleFaces(sex, id) {\r\n      const bySex = {\r\n        male: ['🧑🏿', '👨🏻', '👦🏼', '‍🧓🏽', '🧔🏾'],\r\n        female: ['👩🏻', '👧🏼', '👩🏽‍🦰', '👩🏾‍🦱', '👱🏿‍♀️']\r\n      }\r\n      return bySex[sex][id % bySex[sex].length]\r\n    }\r\n\r\n    if (loading) return <p className=\"loading\">Loading...</p>\r\n    if (error) return <p className=\"error\">Error :(</p>\r\n\r\n    return (\r\n      <ul>\r\n        {data.people.map(\r\n          ({id, sex, first_name, last_name, blood_type}) => {\r\n            return (\r\n              <li key={id} onClick={() => {setContentId(id)}}>\r\n                <span className=\"face\">{peopleFaces(sex, id)}</span>\r\n                <span className=\"bloodType\">{blood_type}</span>\r\n                <span className=\"peopleName\">{first_name} {last_name}</span>\r\n              </li>\r\n            )\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n\r\n  function MainContents () {\r\n\r\n    const { loading, error, data, refetch } = useQuery(GET_PERSON, {\r\n      variables: {id: contentId},\r\n      onCompleted: (data) => {\r\n        if (contentId === 0) {\r\n          setInputs({\r\n            first_name: '',\r\n            last_name: '',\r\n            sex: sexes[0],\r\n            blood_type: bloodTypes[0],\r\n            serve_years: 0,\r\n            role: roles[0],\r\n            team: 0,\r\n            from: ''\r\n          })\r\n        } else {\r\n          setInputs({\r\n            first_name: data.person.first_name,\r\n            last_name: data.person.last_name,\r\n            sex: data.person.sex,\r\n            blood_type: data.person.blood_type,\r\n            serve_years: data.person.serve_years,\r\n            role: data.person.role,\r\n            team: data.person.team,\r\n            from: data.person.from\r\n          })\r\n        }\r\n      }\r\n    });\r\n\r\n    refetchPerson = refetch\r\n\r\n    if (loading) return <p className=\"loading\">Loading...</p>\r\n    if (error) return <p className=\"error\">Error :(</p>\r\n\r\n    function handleChange(e) {\r\n      const { name, value } = e.target\r\n      setInputs({\r\n        ...inputs,\r\n        [name]: ['serve_years', 'team'].includes(name) ? Number(value) : value\r\n      })\r\n    }\r\n\r\n    return (\r\n      <div className=\"inputContainer\">\r\n        <table>\r\n          <tbody>\r\n            {contentId !== 0 && (\r\n            <tr>\r\n              <td>Id</td>\r\n              <td>{contentId}</td>\r\n            </tr>\r\n            )}\r\n            <tr>\r\n              <td>First Name</td>\r\n              <td><input type=\"text\" name=\"first_name\" value={inputs.first_name} onChange={handleChange}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Last Name</td>\r\n              <td><input type=\"text\" name=\"last_name\" value={inputs.last_name} onChange={handleChange}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Sex</td>\r\n              <td>\r\n                <select name=\"sex\" value={inputs.sex} onChange={(e) => {handleChange(e)}}>\r\n                  {sexes.map((sex) => {\r\n                    return (<option key={sex} value={sex}>{sex}</option>)})}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Blood Type</td>\r\n              <td>\r\n                <select name=\"blood_type\" value={inputs.blood_type} onChange={(e) => {handleChange(e)}}>\r\n                  {bloodTypes.map((bloodType) => {\r\n                    return (<option key={bloodType} value={bloodType}>{bloodType}</option>)})}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Serve Years</td>\r\n              <td><input type=\"number\" name=\"serve_years\" value={inputs.serve_years} onChange={handleChange}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>Role</td>\r\n              <td>\r\n                <select name=\"role\" value={inputs.role} onChange={(e) => {handleChange(e)}}>\r\n                  {roles.map((role) => {\r\n                    return (<option key={role} value={role}>{role}</option>)})}\r\n                </select>\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td>Team</td>\r\n              <td><input type=\"number\" name=\"team\" value={inputs.team} onChange={handleChange}/></td>\r\n            </tr>\r\n            <tr>\r\n              <td>From</td>\r\n              <td><input type=\"text\" name=\"from\" value={inputs.from} onChange={handleChange}/></td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n        {contentId > 0 && (\r\n          <ul>\r\n            {data.person.tools.map((tool) => {\r\n              return (\r\n                <li key={tool.id}>\r\n                  {tool.id}\r\n                  {tool.__typename === 'Equipment' && (\r\n                    <span>\r\n                      <span className=\"count\">{tool.count}</span>\r\n                      <span className=\"increase\" \r\n                      onClick={() => increaseEquipment({variables: {id: tool.id}})}>\r\n                        🔺\r\n                      </span>\r\n                    </span>\r\n                  )}\r\n                </li>\r\n              )\r\n            })}\r\n          </ul>\r\n        )}\r\n        {contentId === 0 ? \r\n          (<div className=\"buttons\">\r\n            <button onClick={() => {execPostPerson()}}>Submit</button>\r\n          </div>\r\n          ) : (\r\n          <div className=\"buttons\">\r\n            <button onClick={() => {execEditPerson()}}>Modify</button>\r\n            <button onClick={() => {execDeletePerson()}}>Delete</button>\r\n            <button onClick={() => {setContentId(0)}}>New</button>\r\n          </div>\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"people\" className=\"component\">\r\n      <aside>\r\n        {AsideItems()}\r\n      </aside>\r\n      <section className=\"contents\">\r\n        {MainContents()}\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default People;"]},"metadata":{},"sourceType":"module"}