{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\graphQL\\\\yalco-inflearn-graphql-apollo\\\\4-1-react-before-apollo\\\\src\\\\components\\\\roles.js\",\n    _s3 = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport \"./components.css\";\nconst GET_ROLES = gql`\n  query GetRoles {\n    roles {\n      id\n    }\n  }\n`;\nconst GET_ROLE = gql`\n  query GetRole($id: ID!) {\n    role(id: $id) {\n      id\n      requirement\n      members {\n        id\n        last_name\n        serve_years\n      }\n      equipments {\n        id\n      }\n      softwares {\n        id\n      }\n    }\n  }\n`;\n\nfunction Roles() {\n  _s3();\n\n  var _s = $RefreshSig$(),\n      _s2 = $RefreshSig$();\n\n  const [contentId, setContentId] = useState(\"\");\n  console.log(contentId); // ...\n\n  function AsideItems() {\n    _s();\n\n    const roleIcons = {\n      developer: \"üíª\",\n      designer: \"üé®\",\n      planner: \"üìù\"\n    };\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_ROLES);\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 23\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: data.roles.map(({\n        id\n      }) => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: \"roleItem \" + (contentId === \"id\" ? \"on\" : \"\"),\n          onClick: () => {\n            setContentId(id);\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: contentId === id ? \"üî≤\" : \"‚¨õ\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this), roleIcons[id], \" \", id]\n        }, id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  } // ...\n\n\n  _s(AsideItems, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  function MainContents() {\n    _s2();\n\n    const {\n      loading,\n      error,\n      data\n    } = useQuery(GET_ROLE, {\n      variables: {\n        id: contentId\n      }\n    });\n    if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading\",\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 25\n    }, this);\n    if (error) return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: \"Error :(\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 23\n    }, this);\n    if (contentId === \"\") return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleWrapper\",\n      children: \"Select Role\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 34\n    }, this);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"roleWrapper\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"requirement\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Members\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Equipments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Softwares\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this);\n  }\n\n  _s2(MainContents, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n    return [useQuery];\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"roles\",\n    className: \"component\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      children: AsideItems()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"contents\",\n      children: MainContents()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s3(Roles, \"qYOvVqXYsCQNPNqxt0WJ4fl8xyo=\");\n\n_c = Roles;\nexport default Roles;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roles\");","map":{"version":3,"sources":["C:/Users/boomers/Ï°∞ÏàòÏïÑ/graphQL/yalco-inflearn-graphql-apollo/4-1-react-before-apollo/src/components/roles.js"],"names":["useState","useQuery","gql","GET_ROLES","GET_ROLE","Roles","contentId","setContentId","console","log","AsideItems","roleIcons","developer","designer","planner","loading","error","data","roles","map","id","MainContents","variables"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\nimport { useQuery, gql } from \"@apollo/client\";\r\nimport \"./components.css\";\r\n\r\nconst GET_ROLES = gql`\r\n  query GetRoles {\r\n    roles {\r\n      id\r\n    }\r\n  }\r\n`;\r\nconst GET_ROLE = gql`\r\n  query GetRole($id: ID!) {\r\n    role(id: $id) {\r\n      id\r\n      requirement\r\n      members {\r\n        id\r\n        last_name\r\n        serve_years\r\n      }\r\n      equipments {\r\n        id\r\n      }\r\n      softwares {\r\n        id\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nfunction Roles() {\r\n  const [contentId, setContentId] = useState(\"\");\r\n  console.log(contentId);\r\n  // ...\r\n  function AsideItems() {\r\n    const roleIcons = {\r\n      developer: \"üíª\",\r\n      designer: \"üé®\",\r\n      planner: \"üìù\",\r\n    };\r\n    const { loading, error, data } = useQuery(GET_ROLES);\r\n    if (loading) return <p className=\"loading\">Loading...</p>;\r\n    if (error) return <p className=\"error\">Error :(</p>;\r\n    return (\r\n      <ul>\r\n        {data.roles.map(({ id }) => {\r\n          return (\r\n            <li\r\n              key={id}\r\n              className={\"roleItem \" + (contentId === \"id\" ? \"on\" : \"\")}\r\n              onClick={() => {\r\n                setContentId(id);\r\n              }}\r\n            >\r\n              <span>{contentId === id ? \"üî≤\" : \"‚¨õ\"}</span>\r\n              {roleIcons[id]} {id}\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n  // ...\r\n  function MainContents() {\r\n    const { loading, error, data } = useQuery(GET_ROLE, {\r\n      variables: { id: contentId },\r\n    });\r\n\r\n    if (loading) return <p className=\"loading\">Loading...</p>;\r\n    if (error) return <p className=\"error\">Error :(</p>;\r\n    if (contentId === \"\") return <div className=\"roleWrapper\">Select Role</div>;\r\n\r\n    return (\r\n      <div className=\"roleWrapper\">\r\n        {/* <h2>{ data.role.id}</h2> */}\r\n        <div className=\"requirement\">\r\n          {/* <span>{data.role.requirement}</span> required */}\r\n        </div>\r\n        <h3>Members</h3>\r\n        <ul>\r\n          {/* {data.role.members.map((member) => {\r\n            return <li>{member.last_name}</li>;\r\n          })} */}\r\n        </ul>\r\n        <h3>Equipments</h3>\r\n        <ul>\r\n          {/* {data.role.equipments.map((equipment) => {\r\n            return <li>{equipment.id}</li>;\r\n          })} */}\r\n        </ul>\r\n        <h3>Softwares</h3>\r\n        {/* {data.role.softwares.map((software) => {\r\n          return <li>{software.id}</li>;\r\n        })} */}\r\n        <ul></ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div id=\"roles\" className=\"component\">\r\n      <aside>{AsideItems()}</aside>\r\n      <section className=\"contents\">{MainContents()}</section>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Roles;\r\n"]},"metadata":{},"sourceType":"module"}