{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\traveler\\\\Traverler\\\\src\\\\components\\\\MapChart\\\\MapChart.js\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, Graticule, ZoomableGroup, ZoomableGlobe, Sphere, Marker } from \"react-simple-maps\";\nimport { PatternLines } from \"@vx/pattern\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst highlighted = [\"KOR\"];\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoEqualEarth\",\n    children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n      zoom: 1.8,\n      children: /*#__PURE__*/_jsxDEV(ZoomableGlobe, {\n        children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n          cx: 250,\n          cy: 250,\n          r: 220,\n          fill: \"transparent\",\n          stroke: \"#CFD8DC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PatternLines, {\n          id: \"lines\",\n          height: 4,\n          width: 4,\n          stroke: \"#e5d5c0\",\n          strokeWidth: 0.5,\n          background: \"#026c80\",\n          orientation: [\"diagonal\"]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n          stroke: \"#ecae7d\",\n          strokeWidth: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Graticule, {\n          stroke: \"#ecae7d\",\n          strokeWidth: 0.3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Geographies, {\n          geography: geoUrl,\n          stroke: \"#026c80\",\n          strokeWidth: 0.2,\n          children: ({\n            geographies\n          }) => geographies.map(geo => {\n            const isHighlighted = highlighted.indexOf(geo.properties.ISO_A3) !== -1;\n            return /*#__PURE__*/_jsxDEV(Geography, {\n              geography: geo,\n              fill: isHighlighted ? \"url('#lines')\" : \"#8db4ad\",\n              onClick: () => console.log(geo.properties.ISO_A3),\n              style: {\n                default: {\n                  transition: \"all 250ms\",\n                  outline: \"none\"\n                },\n                hover: {\n                  fill: \"#ed6335\",\n                  stroke: \"#e9311a\",\n                  transition: \"all 250ms\",\n                  cursor: \"pointer\",\n                  outline: \"none\"\n                }\n              }\n            }, geo.rsmKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/components/MapChart/MapChart.js"],"names":["React","ComposableMap","Geographies","Geography","Graticule","ZoomableGroup","ZoomableGlobe","Sphere","Marker","PatternLines","geoUrl","highlighted","MapChart","geographies","map","geo","isHighlighted","indexOf","properties","ISO_A3","console","log","default","transition","outline","hover","fill","stroke","cursor","rsmKey"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,aADF,EAEEC,WAFF,EAGEC,SAHF,EAIEC,SAJF,EAKEC,aALF,EAMEC,aANF,EAOEC,MAPF,EAQEC,MARF,QASO,mBATP;AAUA,SAASC,YAAT,QAA6B,aAA7B;AAEA,MAAMC,MAAM,GACV,wGADF;AAEA,MAAMC,WAAW,GAAG,CAAC,KAAD,CAApB;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,sBACE,QAAC,aAAD;AAAe,IAAA,UAAU,EAAC,eAA1B;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,IAAI,EAAE,GAArB;AAAA,6BACE,QAAC,aAAD;AAAA,gCACE;AACE,UAAA,EAAE,EAAE,GADN;AAEE,UAAA,EAAE,EAAE,GAFN;AAGE,UAAA,CAAC,EAAE,GAHL;AAIE,UAAA,IAAI,EAAC,aAJP;AAKE,UAAA,MAAM,EAAC;AALT;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,YAAD;AACE,UAAA,EAAE,EAAC,OADL;AAEE,UAAA,MAAM,EAAE,CAFV;AAGE,UAAA,KAAK,EAAE,CAHT;AAIE,UAAA,MAAM,EAAC,SAJT;AAKE,UAAA,WAAW,EAAE,GALf;AAME,UAAA,UAAU,EAAC,SANb;AAOE,UAAA,WAAW,EAAE,CAAC,UAAD;AAPf;AAAA;AAAA;AAAA;AAAA,gBAVF,eAoBE,QAAC,MAAD;AAAQ,UAAA,MAAM,EAAC,SAAf;AAAyB,UAAA,WAAW,EAAE;AAAtC;AAAA;AAAA;AAAA;AAAA,gBApBF,eAsBE,QAAC,SAAD;AAAW,UAAA,MAAM,EAAC,SAAlB;AAA4B,UAAA,WAAW,EAAE;AAAzC;AAAA;AAAA;AAAA;AAAA,gBAtBF,eAuBE,QAAC,WAAD;AAAa,UAAA,SAAS,EAAEF,MAAxB;AAAgC,UAAA,MAAM,EAAC,SAAvC;AAAiD,UAAA,WAAW,EAAE,GAA9D;AAAA,oBACG,CAAC;AAAEG,YAAAA;AAAF,WAAD,KACCA,WAAW,CAACC,GAAZ,CAAiBC,GAAD,IAAS;AACvB,kBAAMC,aAAa,GACjBL,WAAW,CAACM,OAAZ,CAAoBF,GAAG,CAACG,UAAJ,CAAeC,MAAnC,MAA+C,CAAC,CADlD;AAEA,gCACE,QAAC,SAAD;AAEE,cAAA,SAAS,EAAEJ,GAFb;AAGE,cAAA,IAAI,EAAEC,aAAa,GAAG,eAAH,GAAqB,SAH1C;AAIE,cAAA,OAAO,EAAE,MAAMI,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,UAAJ,CAAeC,MAA3B,CAJjB;AAKE,cAAA,KAAK,EAAE;AACLG,gBAAAA,OAAO,EAAE;AACPC,kBAAAA,UAAU,EAAE,WADL;AAEPC,kBAAAA,OAAO,EAAE;AAFF,iBADJ;AAKLC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,IAAI,EAAE,SADD;AAELC,kBAAAA,MAAM,EAAE,SAFH;AAGLJ,kBAAAA,UAAU,EAAE,WAHP;AAILK,kBAAAA,MAAM,EAAE,SAJH;AAKLJ,kBAAAA,OAAO,EAAE;AALJ;AALF;AALT,eACOT,GAAG,CAACc,MADX;AAAA;AAAA;AAAA;AAAA,oBADF;AAqBD,WAxBD;AAFJ;AAAA;AAAA;AAAA;AAAA,gBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgED,CAjED;;KAAMjB,Q;AAmEN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  ZoomableGroup,\r\n  ZoomableGlobe,\r\n  Sphere,\r\n  Marker,\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\nconst highlighted = [\"KOR\"];\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap projection=\"geoEqualEarth\">\r\n      <ZoomableGroup zoom={1.8}>\r\n        <ZoomableGlobe>\r\n          <circle\r\n            cx={250}\r\n            cy={250}\r\n            r={220}\r\n            fill=\"transparent\"\r\n            stroke=\"#CFD8DC\"\r\n          />\r\n\r\n          {/* 패턴 */}\r\n          <PatternLines\r\n            id=\"lines\"\r\n            height={4}\r\n            width={4}\r\n            stroke=\"#e5d5c0\"\r\n            strokeWidth={0.5}\r\n            background=\"#026c80\"\r\n            orientation={[\"diagonal\"]}\r\n          />\r\n          {/* 외곽선 */}\r\n          <Sphere stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n          {/* 위도경도 */}\r\n          <Graticule stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n          <Geographies geography={geoUrl} stroke=\"#026c80\" strokeWidth={0.2}>\r\n            {({ geographies }) =>\r\n              geographies.map((geo) => {\r\n                const isHighlighted =\r\n                  highlighted.indexOf(geo.properties.ISO_A3) !== -1;\r\n                return (\r\n                  <Geography\r\n                    key={geo.rsmKey}\r\n                    geography={geo}\r\n                    fill={isHighlighted ? \"url('#lines')\" : \"#8db4ad\"}\r\n                    onClick={() => console.log(geo.properties.ISO_A3)}\r\n                    style={{\r\n                      default: {\r\n                        transition: \"all 250ms\",\r\n                        outline: \"none\",\r\n                      },\r\n                      hover: {\r\n                        fill: \"#ed6335\",\r\n                        stroke: \"#e9311a\",\r\n                        transition: \"all 250ms\",\r\n                        cursor: \"pointer\",\r\n                        outline: \"none\",\r\n                      },\r\n                    }}\r\n                  />\r\n                );\r\n              })\r\n            }\r\n          </Geographies>\r\n        </ZoomableGlobe>\r\n        {/* <Marker coordinates={[-101, 53]} fill=\"#777\">\r\n          <text textAnchor=\"middle\" fill=\"#F53\">\r\n            Canada\r\n          </text>\r\n        </Marker> */}\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}