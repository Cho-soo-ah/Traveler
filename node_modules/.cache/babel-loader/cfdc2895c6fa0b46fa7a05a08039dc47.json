{"ast":null,"code":"// import React from \"react\";\n// import ReactDOM from \"react-dom\";\n// import \"./format.css\";\n// import App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n// ReactDOM.render(\n//   <React.StrictMode>\n//     <App />\n//   </React.StrictMode>,\n//   document.getElementById(\"root\")\n// );\n// reportWebVitals();\n// ------------------------------------------------ //\nconst {\n  WebGLRenderer,\n  PerspectiveCamera,\n  Scene,\n  Mesh,\n  MeshBasicMaterial,\n  CylinderGeometry,\n  AmbientLight,\n  PointLight,\n  DoubleSide,\n  TextureLoader,\n  OrbitControls,\n  Color,\n  PlaneBufferGeometry,\n  OrthographicCamera,\n  RepeatWrapping\n} = global.THREE;\n\nclass App {\n  get size() {\n    return {\n      width: window.innerWidth,\n      height: window.innerHeight\n    };\n  }\n\n  constructor() {\n    const {\n      height,\n      width\n    } = this.size;\n    this.renderer = new WebGLRenderer({\n      antialising: true,\n      alpha: true,\n      canvas: undefined\n    });\n    this.renderer.setPixelRatio(window.devicePixelRatio);\n    this.renderer.setSize(width, height);\n    this.camera = new PerspectiveCamera(45, width / height, 1, 100);\n    this.camera.position.z = 5;\n    this.controls = new OrbitControls(this.camera);\n    this.scene = new Scene();\n    this.backgroundGeometry = new PlaneBufferGeometry(5, 5);\n    this.backgroundMap = new TextureLoader().load(\"https://uploads.codesandbox.io/uploads/user/17b8b653-e409-43ab-bc76-4dc7db446c10/8nUk-rock-_disp.png\");\n    this.backgroundMap.wrapS = RepeatWrapping;\n    this.backgroundMap.wrapT = RepeatWrapping;\n    this.backgroundMap.repeat.set(4, 4);\n    this.backgroundMaterial = new MeshBasicMaterial({\n      color: 0x000000,\n      map: this.backgroundMap,\n      alphaTest: 0.2\n    }); // this.plane = new Mesh(this.backgroundGeometry, this.backgroundMaterial);\n\n    this.map = new TextureLoader().load(\"../blourbagels.png\"); //this.map.wrapS = RepeatWrapping;\n    //this.map.wrapT = RepeatWrapping;\n    //this.map.repeat.y = 71 / 2048;\n    // this.map.repeat.y = 71 / 2048;\n\n    this.map.offset.y = 1 - this.map.repeat.y; //this.map.repeat.y = 71 / 2048;\n    //this.map.offset.y = 0;\n    //this.map.offset.y = 1\n\n    this.geometry = new CylinderGeometry(1, 1, 1, 64, 1, true);\n    this.material = new MeshBasicMaterial({\n      map: this.map,\n      side: DoubleSide,\n      alphaTest: 0.7\n    });\n    this.mesh = new Mesh(this.geometry, this.material);\n    this.mesh.position.z = 1;\n    this.mesh.rotation.x = 0.4;\n    this.mesh.rotation.z = 0.2;\n    this.mesh.rotation.y = -0.8;\n    this.scene.add(this.plane);\n    this.scene.add(this.mesh);\n    global.document.getElementById(\"app\").appendChild(this.renderer.domElement);\n    this.update = this.update.bind(this);\n  }\n\n  update() {\n    //this.mesh.rotation.x += Math.sin(0.01);\n    this.mesh.rotation.y -= Math.sin(0.01);\n    this.backgroundMap.offset.y += Math.sin(0.01); //this.map.offset.y += 1 - Math.sin(0.01);;\n\n    this.renderer.render(this.scene, this.camera);\n    this.requestId = requestAnimationFrame(this.update);\n  }\n\n}\n\nconst app = new App();\napp.update();","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/index.js"],"names":["WebGLRenderer","PerspectiveCamera","Scene","Mesh","MeshBasicMaterial","CylinderGeometry","AmbientLight","PointLight","DoubleSide","TextureLoader","OrbitControls","Color","PlaneBufferGeometry","OrthographicCamera","RepeatWrapping","global","THREE","App","size","width","window","innerWidth","height","innerHeight","constructor","renderer","antialising","alpha","canvas","undefined","setPixelRatio","devicePixelRatio","setSize","camera","position","z","controls","scene","backgroundGeometry","backgroundMap","load","wrapS","wrapT","repeat","set","backgroundMaterial","color","map","alphaTest","offset","y","geometry","material","side","mesh","rotation","x","add","plane","document","getElementById","appendChild","domElement","update","bind","Math","sin","render","requestId","requestAnimationFrame","app"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA,MAAM;AACJA,EAAAA,aADI;AAEJC,EAAAA,iBAFI;AAGJC,EAAAA,KAHI;AAIJC,EAAAA,IAJI;AAKJC,EAAAA,iBALI;AAMJC,EAAAA,gBANI;AAOJC,EAAAA,YAPI;AAQJC,EAAAA,UARI;AASJC,EAAAA,UATI;AAUJC,EAAAA,aAVI;AAWJC,EAAAA,aAXI;AAYJC,EAAAA,KAZI;AAaJC,EAAAA,mBAbI;AAcJC,EAAAA,kBAdI;AAeJC,EAAAA;AAfI,IAgBFC,MAAM,CAACC,KAhBX;;AAkBA,MAAMC,GAAN,CAAU;AACR,MAAIC,IAAJ,GAAW;AACT,WAAO;AACLC,MAAAA,KAAK,EAAEC,MAAM,CAACC,UADT;AAELC,MAAAA,MAAM,EAAEF,MAAM,CAACG;AAFV,KAAP;AAID;;AAEDC,EAAAA,WAAW,GAAG;AACZ,UAAM;AAAEF,MAAAA,MAAF;AAAUH,MAAAA;AAAV,QAAoB,KAAKD,IAA/B;AAEA,SAAKO,QAAL,GAAgB,IAAIzB,aAAJ,CAAkB;AAChC0B,MAAAA,WAAW,EAAE,IADmB;AAEhCC,MAAAA,KAAK,EAAE,IAFyB;AAGhCC,MAAAA,MAAM,EAAEC;AAHwB,KAAlB,CAAhB;AAKA,SAAKJ,QAAL,CAAcK,aAAd,CAA4BV,MAAM,CAACW,gBAAnC;AACA,SAAKN,QAAL,CAAcO,OAAd,CAAsBb,KAAtB,EAA6BG,MAA7B;AAEA,SAAKW,MAAL,GAAc,IAAIhC,iBAAJ,CAAsB,EAAtB,EAA0BkB,KAAK,GAAGG,MAAlC,EAA0C,CAA1C,EAA6C,GAA7C,CAAd;AACA,SAAKW,MAAL,CAAYC,QAAZ,CAAqBC,CAArB,GAAyB,CAAzB;AAEA,SAAKC,QAAL,GAAgB,IAAI1B,aAAJ,CAAkB,KAAKuB,MAAvB,CAAhB;AAEA,SAAKI,KAAL,GAAa,IAAInC,KAAJ,EAAb;AAEA,SAAKoC,kBAAL,GAA0B,IAAI1B,mBAAJ,CAAwB,CAAxB,EAA2B,CAA3B,CAA1B;AACA,SAAK2B,aAAL,GAAqB,IAAI9B,aAAJ,GAAoB+B,IAApB,CACnB,sGADmB,CAArB;AAGA,SAAKD,aAAL,CAAmBE,KAAnB,GAA2B3B,cAA3B;AACA,SAAKyB,aAAL,CAAmBG,KAAnB,GAA2B5B,cAA3B;AACA,SAAKyB,aAAL,CAAmBI,MAAnB,CAA0BC,GAA1B,CAA8B,CAA9B,EAAiC,CAAjC;AACA,SAAKC,kBAAL,GAA0B,IAAIzC,iBAAJ,CAAsB;AAC9C0C,MAAAA,KAAK,EAAE,QADuC;AAE9CC,MAAAA,GAAG,EAAE,KAAKR,aAFoC;AAG9CS,MAAAA,SAAS,EAAE;AAHmC,KAAtB,CAA1B,CAzBY,CA8BZ;;AAEA,SAAKD,GAAL,GAAW,IAAItC,aAAJ,GAAoB+B,IAApB,CAAyB,oBAAzB,CAAX,CAhCY,CAkCZ;AACA;AACA;AACA;;AACA,SAAKO,GAAL,CAASE,MAAT,CAAgBC,CAAhB,GAAoB,IAAI,KAAKH,GAAL,CAASJ,MAAT,CAAgBO,CAAxC,CAtCY,CAuCZ;AACA;AACA;;AAEA,SAAKC,QAAL,GAAgB,IAAI9C,gBAAJ,CAAqB,CAArB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8B,EAA9B,EAAkC,CAAlC,EAAqC,IAArC,CAAhB;AACA,SAAK+C,QAAL,GAAgB,IAAIhD,iBAAJ,CAAsB;AACpC2C,MAAAA,GAAG,EAAE,KAAKA,GAD0B;AAEpCM,MAAAA,IAAI,EAAE7C,UAF8B;AAGpCwC,MAAAA,SAAS,EAAE;AAHyB,KAAtB,CAAhB;AAKA,SAAKM,IAAL,GAAY,IAAInD,IAAJ,CAAS,KAAKgD,QAAd,EAAwB,KAAKC,QAA7B,CAAZ;AACA,SAAKE,IAAL,CAAUpB,QAAV,CAAmBC,CAAnB,GAAuB,CAAvB;AACA,SAAKmB,IAAL,CAAUC,QAAV,CAAmBC,CAAnB,GAAuB,GAAvB;AACA,SAAKF,IAAL,CAAUC,QAAV,CAAmBpB,CAAnB,GAAuB,GAAvB;AACA,SAAKmB,IAAL,CAAUC,QAAV,CAAmBL,CAAnB,GAAuB,CAAC,GAAxB;AAEA,SAAKb,KAAL,CAAWoB,GAAX,CAAe,KAAKC,KAApB;AACA,SAAKrB,KAAL,CAAWoB,GAAX,CAAe,KAAKH,IAApB;AAEAvC,IAAAA,MAAM,CAAC4C,QAAP,CAAgBC,cAAhB,CAA+B,KAA/B,EAAsCC,WAAtC,CAAkD,KAAKpC,QAAL,CAAcqC,UAAhE;AACA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACD;;AAEDD,EAAAA,MAAM,GAAG;AACP;AACA,SAAKT,IAAL,CAAUC,QAAV,CAAmBL,CAAnB,IAAwBe,IAAI,CAACC,GAAL,CAAS,IAAT,CAAxB;AACA,SAAK3B,aAAL,CAAmBU,MAAnB,CAA0BC,CAA1B,IAA+Be,IAAI,CAACC,GAAL,CAAS,IAAT,CAA/B,CAHO,CAIP;;AAEA,SAAKzC,QAAL,CAAc0C,MAAd,CAAqB,KAAK9B,KAA1B,EAAiC,KAAKJ,MAAtC;AACA,SAAKmC,SAAL,GAAiBC,qBAAqB,CAAC,KAAKN,MAAN,CAAtC;AACD;;AA9EO;;AAiFV,MAAMO,GAAG,GAAG,IAAIrD,GAAJ,EAAZ;AACAqD,GAAG,CAACP,MAAJ","sourcesContent":["// import React from \"react\";\r\n// import ReactDOM from \"react-dom\";\r\n// import \"./format.css\";\r\n// import App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\n\r\n// ReactDOM.render(\r\n//   <React.StrictMode>\r\n//     <App />\r\n//   </React.StrictMode>,\r\n//   document.getElementById(\"root\")\r\n// );\r\n\r\n// reportWebVitals();\r\n// ------------------------------------------------ //\r\nconst {\r\n  WebGLRenderer,\r\n  PerspectiveCamera,\r\n  Scene,\r\n  Mesh,\r\n  MeshBasicMaterial,\r\n  CylinderGeometry,\r\n  AmbientLight,\r\n  PointLight,\r\n  DoubleSide,\r\n  TextureLoader,\r\n  OrbitControls,\r\n  Color,\r\n  PlaneBufferGeometry,\r\n  OrthographicCamera,\r\n  RepeatWrapping,\r\n} = global.THREE;\r\n\r\nclass App {\r\n  get size() {\r\n    return {\r\n      width: window.innerWidth,\r\n      height: window.innerHeight,\r\n    };\r\n  }\r\n\r\n  constructor() {\r\n    const { height, width } = this.size;\r\n\r\n    this.renderer = new WebGLRenderer({\r\n      antialising: true,\r\n      alpha: true,\r\n      canvas: undefined,\r\n    });\r\n    this.renderer.setPixelRatio(window.devicePixelRatio);\r\n    this.renderer.setSize(width, height);\r\n\r\n    this.camera = new PerspectiveCamera(45, width / height, 1, 100);\r\n    this.camera.position.z = 5;\r\n\r\n    this.controls = new OrbitControls(this.camera);\r\n\r\n    this.scene = new Scene();\r\n\r\n    this.backgroundGeometry = new PlaneBufferGeometry(5, 5);\r\n    this.backgroundMap = new TextureLoader().load(\r\n      \"https://uploads.codesandbox.io/uploads/user/17b8b653-e409-43ab-bc76-4dc7db446c10/8nUk-rock-_disp.png\"\r\n    );\r\n    this.backgroundMap.wrapS = RepeatWrapping;\r\n    this.backgroundMap.wrapT = RepeatWrapping;\r\n    this.backgroundMap.repeat.set(4, 4);\r\n    this.backgroundMaterial = new MeshBasicMaterial({\r\n      color: 0x000000,\r\n      map: this.backgroundMap,\r\n      alphaTest: 0.2,\r\n    });\r\n    // this.plane = new Mesh(this.backgroundGeometry, this.backgroundMaterial);\r\n\r\n    this.map = new TextureLoader().load(\"../blourbagels.png\");\r\n\r\n    //this.map.wrapS = RepeatWrapping;\r\n    //this.map.wrapT = RepeatWrapping;\r\n    //this.map.repeat.y = 71 / 2048;\r\n    // this.map.repeat.y = 71 / 2048;\r\n    this.map.offset.y = 1 - this.map.repeat.y;\r\n    //this.map.repeat.y = 71 / 2048;\r\n    //this.map.offset.y = 0;\r\n    //this.map.offset.y = 1\r\n\r\n    this.geometry = new CylinderGeometry(1, 1, 1, 64, 1, true);\r\n    this.material = new MeshBasicMaterial({\r\n      map: this.map,\r\n      side: DoubleSide,\r\n      alphaTest: 0.7,\r\n    });\r\n    this.mesh = new Mesh(this.geometry, this.material);\r\n    this.mesh.position.z = 1;\r\n    this.mesh.rotation.x = 0.4;\r\n    this.mesh.rotation.z = 0.2;\r\n    this.mesh.rotation.y = -0.8;\r\n\r\n    this.scene.add(this.plane);\r\n    this.scene.add(this.mesh);\r\n\r\n    global.document.getElementById(\"app\").appendChild(this.renderer.domElement);\r\n    this.update = this.update.bind(this);\r\n  }\r\n\r\n  update() {\r\n    //this.mesh.rotation.x += Math.sin(0.01);\r\n    this.mesh.rotation.y -= Math.sin(0.01);\r\n    this.backgroundMap.offset.y += Math.sin(0.01);\r\n    //this.map.offset.y += 1 - Math.sin(0.01);;\r\n\r\n    this.renderer.render(this.scene, this.camera);\r\n    this.requestId = requestAnimationFrame(this.update);\r\n  }\r\n}\r\n\r\nconst app = new App();\r\napp.update();\r\n"]},"metadata":{},"sourceType":"module"}