{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\boomers\\\\\\uC870\\uC218\\uC544\\\\traveler\\\\Traverler\\\\src\\\\components\\\\MapChart\\\\MapChart.js\";\nimport React from \"react\";\nimport { ComposableMap, Geographies, Geography, Graticule, ZoomableGroup, Sphere, Marker } from \"react-simple-maps\";\nimport { PatternLines } from \"@vx/pattern\";\nconst geoUrl = \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\nconst highlighted = [\"KOR\"];\nconst mapWidth = 800;\nconst mapHeight = 600;\n\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoEqualEarth\",\n    children: /*#__PURE__*/_jsxDEV(ZoomableGroup, {\n      minZoom: 1.8,\n      maxZoom: 3,\n      zomm: 1.8,\n      translateExtent: [[0, 0], [mapWidth, mapHeight]],\n      children: [/*#__PURE__*/_jsxDEV(\"circle\", {\n        cx: 250,\n        cy: 250,\n        r: 220,\n        fill: \"transparent\",\n        stroke: \"#CFD8DC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PatternLines, {\n        id: \"lines\",\n        height: 4,\n        width: 4,\n        stroke: \"#e5d5c0\",\n        strokeWidth: 0.5,\n        background: \"#026c80\",\n        orientation: [\"diagonal\"]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Sphere, {\n        stroke: \"#ecae7d\",\n        strokeWidth: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Graticule, {\n        stroke: \"#ecae7d\",\n        strokeWidth: 0.3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Geographies, {\n        geography: geoUrl,\n        stroke: \"#026c80\",\n        strokeWidth: 0.2,\n        children: ({\n          geographies\n        }) => geographies.map(geo => {\n          const isHighlighted = highlighted.indexOf(geo.properties.ISO_A3) !== -1;\n          return /*#__PURE__*/_jsxDEV(Geography, {\n            geography: geo,\n            fill: isHighlighted ? \"url('#lines')\" : \"#8db4ad\",\n            onClick: () => console.log(geo.properties.ISO_A3),\n            style: {\n              default: {\n                transition: \"all 250ms\",\n                outline: \"none\"\n              },\n              hover: {\n                fill: \"#ed6335\",\n                stroke: \"#e9311a\",\n                transition: \"all 250ms\",\n                cursor: \"pointer\",\n                outline: \"none\"\n              }\n            }\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        coordinates: [-101, 53],\n        fill: \"#777\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          textAnchor: \"middle\",\n          fill: \"#F53\",\n          children: \"Canada\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MapChart;\nexport default MapChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/components/MapChart/MapChart.js"],"names":["React","ComposableMap","Geographies","Geography","Graticule","ZoomableGroup","Sphere","Marker","PatternLines","geoUrl","highlighted","mapWidth","mapHeight","MapChart","geographies","map","geo","isHighlighted","indexOf","properties","ISO_A3","console","log","default","transition","outline","hover","fill","stroke","cursor","rsmKey"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  ZoomableGroup,\r\n  Sphere,\r\n  Marker,\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\nconst highlighted = [\"KOR\"];\r\nconst mapWidth = 800;\r\nconst mapHeight = 600;\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap projection=\"geoEqualEarth\">\r\n      <ZoomableGroup\r\n        minZoom={1.8}\r\n        maxZoom={3}\r\n        zomm={1.8}\r\n        translateExtent={[\r\n          [0, 0],\r\n          [mapWidth, mapHeight],\r\n        ]}\r\n      >\r\n        <circle cx={250} cy={250} r={220} fill=\"transparent\" stroke=\"#CFD8DC\" />\r\n        {/* 패턴 */}\r\n        <PatternLines\r\n          id=\"lines\"\r\n          height={4}\r\n          width={4}\r\n          stroke=\"#e5d5c0\"\r\n          strokeWidth={0.5}\r\n          background=\"#026c80\"\r\n          orientation={[\"diagonal\"]}\r\n        />\r\n        {/* 외곽선 */}\r\n        <Sphere stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n        {/* 위도경도 */}\r\n        <Graticule stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n        <Geographies geography={geoUrl} stroke=\"#026c80\" strokeWidth={0.2}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const isHighlighted =\r\n                highlighted.indexOf(geo.properties.ISO_A3) !== -1;\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={isHighlighted ? \"url('#lines')\" : \"#8db4ad\"}\r\n                  onClick={() => console.log(geo.properties.ISO_A3)}\r\n                  style={{\r\n                    default: {\r\n                      transition: \"all 250ms\",\r\n                      outline: \"none\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"#ed6335\",\r\n                      stroke: \"#e9311a\",\r\n                      transition: \"all 250ms\",\r\n                      cursor: \"pointer\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n        <Marker coordinates={[-101, 53]} fill=\"#777\">\r\n          <text textAnchor=\"middle\" fill=\"#F53\">\r\n            Canada\r\n          </text>\r\n        </Marker>\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}