{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import React from\"react\";import{ComposableMap,Geographies,Geography,Graticule,ZoomableGroup,Sphere,Marker}from\"react-simple-maps\";import{PatternLines}from\"@vx/pattern\";var geoUrl=\"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";var highlighted=[\"KOR\"];var mapWidth=800;var mapHeight=550;var MapChart=function MapChart(){return/*#__PURE__*/_jsx(ComposableMap,{projection:\"geoEqualEarth\",children:/*#__PURE__*/_jsxs(ZoomableGroup,{minZoom:1.5,maxZoom:3,zoom:1.5,translateExtent:[[-mapWidth*2,50],[mapWidth*2,mapHeight]],children:[/*#__PURE__*/_jsx(PatternLines,{id:\"lines\",height:4,width:4,stroke:\"#e5d5c0\",strokeWidth:0.5,background:\"#026c80\",orientation:[\"diagonal\"]}),/*#__PURE__*/_jsx(Sphere,{stroke:\"#ecae7d\",strokeWidth:0.3}),/*#__PURE__*/_jsx(Graticule,{stroke:\"#ecae7d\",strokeWidth:0.3}),/*#__PURE__*/_jsx(Geographies,{geography:geoUrl,stroke:\"#026c80\",strokeWidth:0.2,children:function children(_ref){var geographies=_ref.geographies;return geographies.map(function(geo){var isHighlighted=highlighted.indexOf(geo.properties.ISO_A3)!==-1;return/*#__PURE__*/_jsx(Geography,{geography:geo,fill:isHighlighted?\"url('#lines')\":\"#8db4ad\",onClick:function onClick(){return console.log(geo.properties.ISO_A3);},style:{default:{transition:\"all 250ms\",outline:\"none\"},hover:{fill:\"#ed6335\",stroke:\"#e9311a\",transition:\"all 250ms\",cursor:\"pointer\",outline:\"none\"}}},geo.rsmKey);});}})]})});};export default MapChart;","map":{"version":3,"sources":["C:/Users/boomers/조수아/traveler/Traverler/src/components/MapChart/MapChart.js"],"names":["React","ComposableMap","Geographies","Geography","Graticule","ZoomableGroup","Sphere","Marker","PatternLines","geoUrl","highlighted","mapWidth","mapHeight","MapChart","geographies","map","geo","isHighlighted","indexOf","properties","ISO_A3","console","log","default","transition","outline","hover","fill","stroke","cursor","rsmKey"],"mappings":"wFAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OACEC,aADF,CAEEC,WAFF,CAGEC,SAHF,CAIEC,SAJF,CAKEC,aALF,CAMEC,MANF,CAOEC,MAPF,KAQO,mBARP,CASA,OAASC,YAAT,KAA6B,aAA7B,CAEA,GAAMC,CAAAA,MAAM,CACV,wGADF,CAEA,GAAMC,CAAAA,WAAW,CAAG,CAAC,KAAD,CAApB,CACA,GAAMC,CAAAA,QAAQ,CAAG,GAAjB,CACA,GAAMC,CAAAA,SAAS,CAAG,GAAlB,CAEA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAM,CACrB,mBACE,KAAC,aAAD,EAAe,UAAU,CAAC,eAA1B,uBACE,MAAC,aAAD,EACE,OAAO,CAAE,GADX,CAEE,OAAO,CAAE,CAFX,CAGE,IAAI,CAAE,GAHR,CAIE,eAAe,CAAE,CACf,CAAC,CAACF,QAAD,CAAY,CAAb,CAAgB,EAAhB,CADe,CAEf,CAACA,QAAQ,CAAG,CAAZ,CAAeC,SAAf,CAFe,CAJnB,wBAUE,KAAC,YAAD,EACE,EAAE,CAAC,OADL,CAEE,MAAM,CAAE,CAFV,CAGE,KAAK,CAAE,CAHT,CAIE,MAAM,CAAC,SAJT,CAKE,WAAW,CAAE,GALf,CAME,UAAU,CAAC,SANb,CAOE,WAAW,CAAE,CAAC,UAAD,CAPf,EAVF,cAoBE,KAAC,MAAD,EAAQ,MAAM,CAAC,SAAf,CAAyB,WAAW,CAAE,GAAtC,EApBF,cAsBE,KAAC,SAAD,EAAW,MAAM,CAAC,SAAlB,CAA4B,WAAW,CAAE,GAAzC,EAtBF,cAuBE,KAAC,WAAD,EAAa,SAAS,CAAEH,MAAxB,CAAgC,MAAM,CAAC,SAAvC,CAAiD,WAAW,CAAE,GAA9D,UACG,2BAAGK,CAAAA,WAAH,MAAGA,WAAH,OACCA,CAAAA,WAAW,CAACC,GAAZ,CAAgB,SAACC,GAAD,CAAS,CACvB,GAAMC,CAAAA,aAAa,CACjBP,WAAW,CAACQ,OAAZ,CAAoBF,GAAG,CAACG,UAAJ,CAAeC,MAAnC,IAA+C,CAAC,CADlD,CAEA,mBACE,KAAC,SAAD,EAEE,SAAS,CAAEJ,GAFb,CAGE,IAAI,CAAEC,aAAa,CAAG,eAAH,CAAqB,SAH1C,CAIE,OAAO,CAAE,yBAAMI,CAAAA,OAAO,CAACC,GAAR,CAAYN,GAAG,CAACG,UAAJ,CAAeC,MAA3B,CAAN,EAJX,CAKE,KAAK,CAAE,CACLG,OAAO,CAAE,CACPC,UAAU,CAAE,WADL,CAEPC,OAAO,CAAE,MAFF,CADJ,CAKLC,KAAK,CAAE,CACLC,IAAI,CAAE,SADD,CAELC,MAAM,CAAE,SAFH,CAGLJ,UAAU,CAAE,WAHP,CAILK,MAAM,CAAE,SAJH,CAKLJ,OAAO,CAAE,MALJ,CALF,CALT,EACOT,GAAG,CAACc,MADX,CADF,CAqBD,CAxBD,CADD,EADH,EAvBF,GADF,EADF,CA8DD,CA/DD,CAiEA,cAAejB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Graticule,\r\n  ZoomableGroup,\r\n  Sphere,\r\n  Marker,\r\n} from \"react-simple-maps\";\r\nimport { PatternLines } from \"@vx/pattern\";\r\n\r\nconst geoUrl =\r\n  \"https://raw.githubusercontent.com/zcreativelabs/react-simple-maps/master/topojson-maps/world-110m.json\";\r\nconst highlighted = [\"KOR\"];\r\nconst mapWidth = 800;\r\nconst mapHeight = 550;\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap projection=\"geoEqualEarth\">\r\n      <ZoomableGroup\r\n        minZoom={1.5}\r\n        maxZoom={3}\r\n        zoom={1.5}\r\n        translateExtent={[\r\n          [-mapWidth * 2, 50],\r\n          [mapWidth * 2, mapHeight],\r\n        ]}\r\n      >\r\n        {/* 패턴 */}\r\n        <PatternLines\r\n          id=\"lines\"\r\n          height={4}\r\n          width={4}\r\n          stroke=\"#e5d5c0\"\r\n          strokeWidth={0.5}\r\n          background=\"#026c80\"\r\n          orientation={[\"diagonal\"]}\r\n        />\r\n        {/* 외곽선 */}\r\n        <Sphere stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n        {/* 위도경도 */}\r\n        <Graticule stroke=\"#ecae7d\" strokeWidth={0.3} />\r\n        <Geographies geography={geoUrl} stroke=\"#026c80\" strokeWidth={0.2}>\r\n          {({ geographies }) =>\r\n            geographies.map((geo) => {\r\n              const isHighlighted =\r\n                highlighted.indexOf(geo.properties.ISO_A3) !== -1;\r\n              return (\r\n                <Geography\r\n                  key={geo.rsmKey}\r\n                  geography={geo}\r\n                  fill={isHighlighted ? \"url('#lines')\" : \"#8db4ad\"}\r\n                  onClick={() => console.log(geo.properties.ISO_A3)}\r\n                  style={{\r\n                    default: {\r\n                      transition: \"all 250ms\",\r\n                      outline: \"none\",\r\n                    },\r\n                    hover: {\r\n                      fill: \"#ed6335\",\r\n                      stroke: \"#e9311a\",\r\n                      transition: \"all 250ms\",\r\n                      cursor: \"pointer\",\r\n                      outline: \"none\",\r\n                    },\r\n                  }}\r\n                />\r\n              );\r\n            })\r\n          }\r\n        </Geographies>\r\n        {/* <Marker coordinates={[-101, 53]} fill=\"#777\">\r\n          <text textAnchor=\"middle\" fill=\"#F53\">\r\n            Canada\r\n          </text>\r\n        </Marker> */}\r\n      </ZoomableGroup>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"]},"metadata":{},"sourceType":"module"}